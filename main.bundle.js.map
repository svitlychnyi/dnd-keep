{"version":3,"file":"main.bundle.js","sources":["webpack:///delegated ./node_modules/@angular/core/index.js from dll-reference vendor_lib","webpack:///./src/app/environment.ts","webpack:///delegated ./node_modules/@angularclass/hmr/dist/index.js from dll-reference vendor_lib","webpack:///./src/app/app.service.ts","webpack:///./src/app/char/abilities/ability.service.ts","webpack:///./src/app/char/char.component.ts","webpack:///delegated ./node_modules/@angular/platform-browser/index.js from dll-reference vendor_lib","webpack:///delegated ./node_modules/rxjs/add/observable/of.js from dll-reference vendor_lib","webpack:///./src/main.browser.ts","webpack:///./src/app/index.ts","webpack:///./src/app/char/char.service.ts","webpack:///external \"vendor_lib\"","webpack:///delegated ./node_modules/@angular/platform-browser-dynamic/index.js from dll-reference vendor_lib","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/char/abilities/abitly.ts","webpack:///./src/app/app.resolver.ts","webpack:///./src/app/app.routes.ts","webpack:///./src/app/char/abilities/abilities.component.ts","webpack:///./src/app/char/ac/ac.component.ts","webpack:///./src/app/char/armor/armor.component.ts","webpack:///./src/app/char/attacks/attack.ts","webpack:///./src/app/char/attacks/attacks.component.ts","webpack:///./src/app/char/charSerializer.ts","webpack:///./src/app/char/header/header.component.ts","webpack:///./src/app/char/hp/hp.component.ts","webpack:///./src/app/char/saves/save.ts","webpack:///./src/app/char/saves/saves.component.ts","webpack:///./src/app/char/shield/shield.component.ts","webpack:///./src/app/char/skills/skills.component.ts","webpack:///./src/app/char/weapons/weapon.ts","webpack:///./src/app/char/weapons/weapons.component.ts","webpack:///./src/app/classes/classesFormulas.ts","webpack:///./src/app/items/item.ts","webpack:///./src/app/size/sizes.ts","webpack:///./src/styles/styles.scss","webpack:///./src/app/app.component.css","webpack:///./src/styles/headings.css","webpack:///./src/app/char/abilities/abilities.component.html","webpack:///./src/app/char/ac/ac.component.html","webpack:///./src/app/char/armor/armor.component.html","webpack:///./src/app/char/attacks/attacks.component.html","webpack:///./src/app/char/char.component.html","webpack:///./src/app/char/header/header.component.html","webpack:///./src/app/char/hp/hp.component.html","webpack:///./src/app/char/saves/saves.component.html","webpack:///./src/app/char/skills/skill.ts","webpack:///./src/app/char/shield/shield.component.html","webpack:///./src/app/char/skills/skills.component.html","webpack:///./src/app/char/weapons/weapons.component.html","webpack:///./src/styles/styles.scss?29f7","webpack:///./src/styles/headings.css?f235","webpack:///./src/app/app.component.css?e3a3","webpack:///delegated ./node_modules/rxjs/Observable.js from dll-reference vendor_lib","webpack:///./src/app/classes/classes.ts","webpack:///delegated ./node_modules/@angular/forms/index.js from dll-reference vendor_lib","webpack:///delegated ./node_modules/@angular/http/index.js from dll-reference vendor_lib","webpack:///delegated ./node_modules/@angular/router/index.js from dll-reference vendor_lib"],"sourcesContent":["module.exports = (__webpack_require__(4))(2);\n\n\n//////////////////\n// WEBPACK FOOTER\n// delegated ./node_modules/@angular/core/index.js from dll-reference vendor_lib\n// module id = 1\n// module chunks = 0","// Angular 2\nimport {\n  enableDebugTools,\n  disableDebugTools\n} from '@angular/platform-browser';\nimport {\n  ApplicationRef,\n  enableProdMode\n} from '@angular/core';\n// Environment Providers\nlet PROVIDERS: any[] = [\n  // common env directives\n];\n\n// Angular debug tools in the dev console\n// https://github.com/angular/angular/blob/86405345b781a9dc2438c0fbe3e9409245647019/TOOLS_JS.md\nlet _decorateModuleRef = <T>(value: T): T => { return value; };\n\nif ('production' === ENV) {\n  enableProdMode();\n\n  // Production\n  _decorateModuleRef = (modRef: any) => {\n    disableDebugTools();\n\n    return modRef;\n  };\n\n  PROVIDERS = [\n    ...PROVIDERS,\n    // custom providers in production\n  ];\n\n} else {\n\n  _decorateModuleRef = (modRef: any) => {\n    const appRef = modRef.injector.get(ApplicationRef);\n    const cmpRef = appRef.components[0];\n\n    let _ng = (<any> window).ng;\n    enableDebugTools(cmpRef);\n    (<any> window).ng.probe = _ng.probe;\n    (<any> window).ng.coreTokens = _ng.coreTokens;\n    return modRef;\n  };\n\n  // Development\n  PROVIDERS = [\n    ...PROVIDERS,\n    // custom providers in development\n  ];\n\n}\n\nexport const decorateModuleRef = _decorateModuleRef;\n\nexport const ENV_PROVIDERS = [\n  ...PROVIDERS\n];\n\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./src/app/environment.ts","module.exports = (__webpack_require__(4))(444);\n\n\n//////////////////\n// WEBPACK FOOTER\n// delegated ./node_modules/@angularclass/hmr/dist/index.js from dll-reference vendor_lib\n// module id = 13\n// module chunks = 0","import { Injectable } from '@angular/core';\n\nexport type InternalStateType = {\n  [key: string]: any\n};\n\n@Injectable()\nexport class AppState {\n\n  public _state: InternalStateType = { };\n\n  // already return a clone of the current state\n  public get state() {\n    return this._state = this._clone(this._state);\n  }\n  // never allow mutation\n  public set state(value) {\n    throw new Error('do not mutate the `.state` directly');\n  }\n\n  public get(prop?: any) {\n    // use our state getter for the clone\n    const state = this.state;\n    return state.hasOwnProperty(prop) ? state[prop] : state;\n  }\n\n  public set(prop: string, value: any) {\n    // internally mutate our state\n    return this._state[prop] = value;\n  }\n\n  private _clone(object: InternalStateType) {\n    // simple object clone\n    return JSON.parse(JSON.stringify( object ));\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./src/app/app.service.ts","import { Injectable } from '@angular/core';\n@Injectable()\nexport class AbilityService {\n\n    public static getModifier(score:number):number {\n        score = score || 10;\n        return ((score / 2) >> 0) - 5;\n    }\n}\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./src/app/char/abilities/ability.service.ts","import { Component } from '@angular/core';\nimport { CharService } from './char.service';\nimport { CharSerializer } from './charSerializer';\n\n@Component({\n    selector: 'char',\n    template: require('./char.component.html')\n})\n\n\nexport class CharComponent {\n\n    constructor(public charService: CharService) {}\n\n    public download(){\n        var json = CharSerializer.serializeChar(this.charService.getChar());\n        var blob = new Blob([json], {type: \"application/json\"});\n        var url = window.URL.createObjectURL(blob);\n        var a = document.createElement('a');\n        a.href = url;\n        a.download = this.charService.getChar().name + \".json\";\n        document.body.appendChild(a);\n        a.click();\n        document.body.removeChild(a);\n        window.URL.revokeObjectURL(url);\n    }\n\n    public upload(event){\n        var that = this;\n        var reader = new FileReader();\n        reader.onload = function(readerEvent: any){\n\n            that.charService.setChar(CharSerializer.deserializeChar(readerEvent.target.result));\n        };\n        reader.readAsText(event.target.files[0]);\n    }\n}\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./src/app/char/char.component.ts","module.exports = (__webpack_require__(4))(143);\n\n\n//////////////////\n// WEBPACK FOOTER\n// delegated ./node_modules/@angular/platform-browser/index.js from dll-reference vendor_lib\n// module id = 18\n// module chunks = 0","module.exports = (__webpack_require__(4))(770);\n\n\n//////////////////\n// WEBPACK FOOTER\n// delegated ./node_modules/rxjs/add/observable/of.js from dll-reference vendor_lib\n// module id = 227\n// module chunks = 0","/*\n * Angular bootstraping\n */\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\nimport { decorateModuleRef } from './app/environment';\nimport { bootloader } from '@angularclass/hmr';\n/*\n * App Module\n * our top level module that holds all of our components\n */\nimport { AppModule } from './app';\n\n/*\n * Bootstrap our Angular app with a top level NgModule\n */\nexport function main(): Promise<any> {\n  return platformBrowserDynamic()\n    .bootstrapModule(AppModule)\n    .then(decorateModuleRef)\n    .catch((err) => console.error(err));\n}\n\n// needed for hmr\n// in prod this is replace for document ready\nbootloader(main);\n\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./src/main.browser.ts","// App\nexport * from './app.module';\n\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./src/app/index.ts","import { Injectable } from '@angular/core';\nimport { Char } from './char';\nimport { AbilityService } from './abilities/ability.service';\nimport { Ability } from './abilities/abitly';\nimport { Classes } from '../classes/classes';\nimport { Skill } from './skills/skill';\nimport { Item } from '../items/item';\n\n@Injectable()\nexport class CharService {\n  private char: any = {\n    name: \"Oberon\",\n    player: \"Gena\",\n    race: \"Human\",\n    size: \"m\",\n    sex: \"Male\",\n    eyes: \"Green\",\n    vision: \"Low-light\",\n    heir: \"Black\",\n    age: 40,\n    height: 6,\n    weight: 150,\n    alignment: \"LN\",\n    deities: \"Luck / Trickery\",\n    classes: {\n      class1: { name: \"cleric\", level: 10 },\n      class2: { name: \"cleric\", level: 0 },\n      class3: { name: \"cleric\", level: 0 }\n    },\n    avatar: \"sargon.jpg\",\n\n    initiative: 4,\n    speed: 20,\n    speed_bonus: 0,\n    hp_max: 300,\n    hp: 270,\n    xp: 44100,\n    dr: \"5/evil\",\n    sr: 21,\n\n    armor_bonuses: {\n      natural: 1,\n      deflection: 2,\n      misc: 0,\n      size: 0,\n      luck: 1\n    },\n\n    abilities: { str: 10, dex: 11, con: 12, int: 13, wis: 14, cha: 15 },\n    ench_abilities: { str: 0, dex: 0, con: 0, int: 0, wis: 0, cha: 0 },\n    tmp_abilities: { str: 2, dex: 1, con: 4, int: 1, wis: 2, cha: 1 },\n\n    skills: {\n      \"balance\": 1,\n      \"bluff\": 11,\n      \"concentration\": 13,\n      \"decipherScript\": 1,\n      \"diplomacy\": 11,\n      \"knowledgeArc\": 6,\n      \"knowledgeReligion\": 6,\n      \"knowledgePlanar\": 1,\n      \"knowledgeHistory\": 1,\n      \"spellcraft\": 13\n    },\n    skills_misc: {\n      \"spellcraft\": 2\n    },\n\n    armor: new Item(\"Breast Plate\", 4),\n    shield: new Item(\"Heavy Shield\", 2)\n  };\n\n  public getChar(): Char {\n    return this.char;\n  }\n\n  public setChar(char: Char) {\n    this.char = char;\n  }\n\n  public getCharAbility(ability: Ability): number {\n    return this.getChar().abilities[ability.getName()] || 0;\n  }\n\n  public getCharEnchAbility(ability: Ability): number {\n    return this.getChar().ench_abilities[ability.getName()] || 0;\n  }\n\n  public getCharTmpAbility(ability: Ability): number {\n    return this.getChar().tmp_abilities[ability.getName()] || 0;\n  }\n\n  public getAbilityModifier(ability: Ability): number {\n    var totalAbility: number = this.getCharAbility(ability)\n      + this.getCharEnchAbility(ability)\n      + this.getCharTmpAbility(ability);\n    return AbilityService.getModifier(totalAbility);\n  }\n\n  public getTotalLevel(): number {\n    var totalLevel = 0;\n    for (var className in this.getChar().classes) {\n      totalLevel += Number(this.getChar().classes[className].level);\n    }\n    return totalLevel;\n  }\n\n  public getBAB(): number {\n    var totalBAB: number = 0;\n    for (var className in this.getChar().classes) {\n      var charClass: Classes = Classes.getClass(this.getChar().classes[className].name);\n      totalBAB += charClass.getBAB(this.getChar().classes[className].level);\n    }\n    return totalBAB;\n  }\n\n  public getSave(ability: Ability): number {\n    var totalSave: number = 0;\n    for (var className in this.getChar().classes) {\n      var charClass: Classes = Classes.getClass(this.getChar().classes[className].name);\n      totalSave += charClass.getSave(ability, this.getChar().classes[className].level);\n    }\n    return totalSave;\n  }\n\n  public getTotalSkillRank(skill: Skill): number {\n    return (Number(this.getChar().skills[skill.getName()]) || 0)\n      + (Number(this.getChar().skills_misc[skill.getName()]) || 0)\n      + Number(this.getAbilityModifier(skill.getAbility()));\n  }\n\n  public getClassSkills(): Skill[] {\n    let classSkills: Skill[] = [];\n    for (var classKey in this.getChar().classes) {\n      classSkills = classSkills.concat(Classes.getClass(this.getChar().classes[classKey].name).getSkills());\n    }\n\n    if (this.getChar().deities.indexOf(\"Trickery\")) {\n      classSkills.push(Skill.BLUFF);\n      classSkills.push(Skill.DISGUISE);\n      classSkills.push(Skill.HIDE);\n    }\n    return classSkills;\n  }\n\n  public getSizeArmorModifier() {\n\n  };\n}\n\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./src/app/char/char.service.ts","module.exports = vendor_lib;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"vendor_lib\"\n// module id = 4\n// module chunks = 0","module.exports = (__webpack_require__(4))(442);\n\n\n//////////////////\n// WEBPACK FOOTER\n// delegated ./node_modules/@angular/platform-browser-dynamic/index.js from dll-reference vendor_lib\n// module id = 44\n// module chunks = 0","/*\n * Angular 2 decorators and services\n */\nimport {\n  Component,\n  OnInit,\n  ViewEncapsulation\n} from '@angular/core';\nimport { AppState } from './app.service';\n\n/*\n * App Component\n * Top Level Component\n */\n@Component({\n  selector: 'app',\n  encapsulation: ViewEncapsulation.None,\n  styles: [\n    require('./app.component.css')\n  ],\n  template: `\n    <main>\n      <router-outlet></router-outlet>\n    </main>\n  `\n})\nexport class AppComponent implements OnInit {\n  public angularclassLogo = 'assets/img/angularclass-avatar.png';\n  public name = 'Angular 2 Webpack Starter';\n  public url = 'https://twitter.com/AngularClass';\n\n  constructor(\n    public appState: AppState\n  ) {}\n\n  public ngOnInit() {\n    console.log('Initial App State', this.appState.state);\n  }\n\n}\n\n/*\n * Please review the https://github.com/AngularClass/angular2-examples/ repo for\n * more angular app examples that you may copy/paste\n * (The examples may not be updated as quickly. Please open an issue on github for us to update it)\n * For help or questions please contact us at @AngularClass on twitter\n * or our chat on Slack at https://AngularClass.com/slack-join\n */\n\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./src/app/app.component.ts","import { BrowserModule } from '@angular/platform-browser';\nimport { FormsModule } from '@angular/forms';\nimport { HttpModule } from '@angular/http';\nimport { NgModule, ApplicationRef } from '@angular/core';\nimport { removeNgStyles, createNewHosts, createInputTransfer } from '@angularclass/hmr';\nimport { RouterModule, PreloadAllModules } from '@angular/router';\n/*\n * Platform and Environment providers/directives/pipes\n */\nimport { ENV_PROVIDERS } from './environment';\nimport { ROUTES } from './app.routes';\n// App is our top level component\nimport { AppComponent } from './app.component';\nimport { APP_RESOLVER_PROVIDERS } from './app.resolver';\nimport { AppState, InternalStateType } from './app.service';\nimport '../styles/styles.scss';\nimport '../styles/headings.css';\nimport { CharComponent } from './char/char.component';\nimport { AbilitiesComponent } from './char/abilities/abilities.component';\nimport { ACComponent } from './char/ac/ac.component';\nimport { ArmorComponent } from './char/armor/armor.component';\nimport { AttacksComponent } from './char/attacks/attacks.component';\nimport { AbilityService } from './char/abilities/ability.service';\nimport { HeaderComponent } from './char/header/header.component';\nimport { HPComponent } from './char/hp/hp.component';\nimport { SavesComponent } from './char/saves/saves.component';\nimport { ShieldComponent } from './char/shield/shield.component';\nimport { SkillsComponent } from './char/skills/skills.component';\nimport { WeaponsComponent } from './char/weapons/weapons.component';\nimport { CharService } from './char/char.service';\n\n// Application wide providers\nconst APP_PROVIDERS = [\n  ...APP_RESOLVER_PROVIDERS,\n  AppState\n];\n\ntype StoreType = {\n  state: InternalStateType,\n  restoreInputValues: () => void,\n  disposeOldHosts: () => void\n};\n\n/**\n * `AppModule` is the main entry point into Angular2's bootstraping process\n */\n@NgModule({\n  bootstrap: [AppComponent],\n  declarations: [\n    AppComponent,\n    CharComponent,\n    AbilitiesComponent,\n    ACComponent,\n    ArmorComponent,\n    AttacksComponent,\n    HeaderComponent,\n    HPComponent,\n    SavesComponent,\n    ShieldComponent,\n    SkillsComponent,\n    WeaponsComponent\n  ],\n  imports: [ // import Angular's modules\n    BrowserModule,\n    FormsModule,\n    HttpModule,\n    RouterModule.forRoot(ROUTES, { useHash: true, preloadingStrategy: PreloadAllModules })\n  ],\n  providers: [ // expose our Services and Providers into Angular's dependency injection\n    ENV_PROVIDERS,\n    APP_PROVIDERS,\n    AbilityService,\n    CharService\n  ]\n})\nexport class AppModule {\n\n  constructor(public appRef: ApplicationRef,\n              public appState: AppState) {\n  }\n\n  public hmrOnInit(store: StoreType) {\n    if (!store || !store.state) {\n      return;\n    }\n    console.log('HMR store', JSON.stringify(store, null, 2));\n    // set state\n    this.appState._state = store.state;\n    // set input values\n    if ('restoreInputValues' in store) {\n      let restoreInputValues = store.restoreInputValues;\n      setTimeout(restoreInputValues);\n    }\n\n    this.appRef.tick();\n    delete store.state;\n    delete store.restoreInputValues;\n  }\n\n  public hmrOnDestroy(store: StoreType) {\n    const cmpLocation = this.appRef.components.map((cmp) => cmp.location.nativeElement);\n    // save state\n    const state = this.appState._state;\n    store.state = state;\n    // recreate root elements\n    store.disposeOldHosts = createNewHosts(cmpLocation);\n    // save input values\n    store.restoreInputValues = createInputTransfer();\n    // remove styles\n    removeNgStyles();\n  }\n\n  public hmrAfterDestroy(store: StoreType) {\n    // display new elements\n    store.disposeOldHosts();\n    delete store.disposeOldHosts;\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./src/app/app.module.ts","export class Ability {\n    public static ALL:Ability[] = [];\n\n    public static STR:Ability = new Ability(\"str\");\n    public static DEX:Ability = new Ability(\"dex\");\n    public static CON:Ability = new Ability(\"con\");\n    public static INT:Ability = new Ability(\"int\");\n    public static WIS:Ability = new Ability(\"wis\");\n    public static CHA:Ability = new Ability(\"cha\");\n    public static NONE:Ability = new Ability(\"\");\n\n    private name:string;\n\n    constructor(name:string) {\n        this.name = name;\n        if(this.name !== \"\") {\n            Ability.ALL.push(this);\n        }\n    }\n\n    public getName():string {\n        return this.name;\n    };\n}\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./src/app/char/abilities/abitly.ts","import { Resolve, ActivatedRouteSnapshot, RouterStateSnapshot } from '@angular/router';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs/Observable';\nimport 'rxjs/add/observable/of';\n\n@Injectable()\nexport class DataResolver implements Resolve<any> {\n  public resolve(route: ActivatedRouteSnapshot, state: RouterStateSnapshot) {\n    return Observable.of({ res: 'I am data'});\n  }\n}\n\n// an array of services to resolve routes with data\nexport const APP_RESOLVER_PROVIDERS = [\n  DataResolver\n];\n\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./src/app/app.resolver.ts","import { Routes } from '@angular/router';\nimport { AboutComponent } from './about';\nimport { NoContentComponent } from './no-content';\nimport { CharComponent } from './char/char.component';\n\nexport const ROUTES: Routes = [\n  { path: '',      component: CharComponent },\n  { path: '**',    component: CharComponent }\n];\n\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./src/app/app.routes.ts","import { Component } from '@angular/core';\nimport {Ability} from \"./abitly\";\nimport {CharService} from \"../char.service\";\nimport {Char} from \"../char\";\n\n@Component({\n    selector: 'abilities',\n    template: require('./abilities.component.html'),\n})\n\nexport class AbilitiesComponent {\n    abilities:Ability[] = Ability.ALL;\n\n    constructor(public _charService: CharService) {\n    };\n}\n\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./src/app/char/abilities/abilities.component.ts","import { Component } from '@angular/core';\nimport { CharService } from '../char.service';\nimport { Ability } from '../abilities/abitly';\nimport { Classes } from '../../classes/classes';\n\n@Component({\n  selector: 'ac',\n  template: require('./ac.component.html')\n})\n\nexport class ACComponent {\n  dex: Ability = Ability.DEX;\n\n  constructor(public charService: CharService) {\n  }\n\n  getWisdomModifier(): number {\n    var isMonk: boolean = false;\n\n    for (var classKey in this.charService.getChar().classes) {\n      isMonk = this.charService.getChar().classes[classKey].name == Classes.MONK.getName()\n        ? true\n        : isMonk;\n    }\n\n    return isMonk\n      ? this.charService.getAbilityModifier(Ability.WIS)\n      : 0;\n  }\n\n  getAC(): number {\n    return 10\n      + Number(this.charService.getChar().armor.bonus)\n      + Number(this.charService.getChar().shield.bonus)\n      + Number(this.charService.getAbilityModifier(Ability.DEX))\n      + Number((this.getWisdomModifier() || 0 ))\n      + Number((this.charService.getChar().armor_bonuses.deflection || 0))\n      + Number((this.charService.getChar().armor_bonuses.natural || 0))\n      + Number((this.charService.getChar().armor_bonuses.misc || 0))\n      + Number((this.charService.getChar().armor_bonuses.size || 0))\n      + Number((this.charService.getChar().armor_bonuses.luck || 0));\n  }\n\n  getFF(): number {\n    return 10\n      + Number(this.charService.getChar().armor.bonus)\n      + Number(this.charService.getChar().shield.bonus)\n      + Number((this.getWisdomModifier() || 0 ))\n      + Number((this.charService.getChar().armor_bonuses.natural || 0))\n      + Number((this.charService.getChar().armor_bonuses.misc || 0))\n      + Number((this.charService.getChar().armor_bonuses.size || 0))\n      + Number((this.charService.getChar().armor_bonuses.luck || 0));\n  }\n\n  getTouch(): number {\n    return 10\n      + Number(this.charService.getAbilityModifier(Ability.DEX))\n      + Number((this.getWisdomModifier() || 0 ))\n      + Number((this.charService.getChar().armor_bonuses.deflection || 0))\n      + Number((this.charService.getChar().armor_bonuses.misc || 0))\n      + Number((this.charService.getChar().armor_bonuses.size || 0))\n      + Number((this.charService.getChar().armor_bonuses.luck || 0));\n  }\n}\n;\n\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./src/app/char/ac/ac.component.ts","import { Component } from '@angular/core';\nimport { CharService } from '../char.service';\n\n@Component({\n    selector: 'armor',\n    template: require('./armor.component.html')\n})\n\nexport class ArmorComponent {\n\n    constructor(public charService: CharService) {}\n};\n\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./src/app/char/armor/armor.component.ts","import {Ability} from \"../abilities/abitly\";\n\nexport class Attack {\n    public static ALL:Attack[] = [];\n    public static MELEE = new Attack(\"Melee\", Ability.STR);\n    public static RANGED = new Attack(\"Ranged\", Ability.DEX);\n\n    private name:string;\n    private ability:Ability;\n\n    constructor(name:string, ability:Ability) {\n        this.name = name;\n        this.ability = ability;\n\n        Attack.ALL.push(this);\n    }\n\n    public getName():string {\n        return this.name;\n    }\n\n    public getAbility():Ability {\n        return this.ability;\n    }\n}\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./src/app/char/attacks/attack.ts","import { Component } from '@angular/core';\nimport {Attack} from \"./attack\";\n\n@Component({\n    selector: 'attacks',\n    template: require('./attacks.component.html')\n})\n\nexport class AttacksComponent {\n    public attacks:Attack[] = Attack.ALL;\n};\n\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./src/app/char/attacks/attacks.component.ts","import {Char} from \"./char\";\n/**\n * Created by sargon on 7/18/16.\n */\nexport class CharSerializer{\n    public static serializeChar(char:Char):string {\n        return JSON.stringify(char);\n    }\n\n    public static deserializeChar(charStr:string):Char {\n        console.log(charStr);\n        return JSON.parse(charStr);\n    }\n}\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./src/app/char/charSerializer.ts","import { Component, OnInit } from '@angular/core';\nimport { CharService } from '../char.service';\nimport { Classes } from '../../classes/classes';\nimport { Sizes } from '../../size/sizes';\n\n@Component({\n    selector: 'header',\n    template: require('./header.component.html'),\n})\n\nexport class HeaderComponent implements OnInit {\n\n    protected sizes: Sizes[] = Sizes.ALL;\n    protected classes: Classes[] = Classes.ALL;\n    protected levels: number[] = [];\n\n    constructor(public charService: CharService) {}\n\n    ngOnInit(): void {\n        let i: number = 0;\n        while (i < 20) {\n            this.levels.push(++i);\n        }\n\n    }\n};\n\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./src/app/char/header/header.component.ts","import { Component } from '@angular/core';\nimport { Ability } from '../abilities/abitly';\nimport { CharService } from '../char.service';\n\n@Component({\n    selector: 'hp',\n    template: require('./hp.component.html'),\n})\n\nexport class HPComponent {\n    dex:Ability = Ability.DEX;\n\n    constructor(public charService: CharService) {\n    };\n\n    // N*(N-1)*500\n    getNextLevelXP(): number {\n        return this.charService.getTotalLevel() * (this.charService.getTotalLevel() - 1) * 500;\n    }\n};\n\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./src/app/char/hp/hp.component.ts","import {Ability} from \"../abilities/abitly\";\n\nexport class Save {\n\n    public static ALL:Save[] = [];\n    public static FORTITUDE = new Save(\"fortitude\", \"Fortitude\", Ability.CON);\n    public static REFLEX = new Save(\"reflex\", \"Reflex\", Ability.DEX);\n    public static WILLPOWER = new Save(\"willpower\", \"Willpower\", Ability.WIS);\n\n    private name:string;\n    private label:string;\n    private ability:Ability;\n\n    constructor(name:string, label:string, ability:Ability) {\n        this.name = name;\n        this.label = label;\n        this.ability = ability;\n\n        Save.ALL.push(this);\n    };\n\n    public getName():string {\n        return this.name;\n    }\n\n    public getLabel():string {\n        return this.label;\n    }\n\n    public getAbility():Ability {\n        return this.ability;\n    }\n}\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./src/app/char/saves/save.ts","import { Component } from '@angular/core';\nimport {Save} from \"./save\";\nimport {CharService} from \"../char.service\";\n\n@Component({\n    selector: 'saves',\n    template: require('./saves.component.html')\n})\n\nexport class SavesComponent {\n    public saves:Save[] = Save.ALL;\n\n    constructor(public charService: CharService) {\n    };\n};\n\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./src/app/char/saves/saves.component.ts","import { Component } from '@angular/core';\nimport { CharService } from '../char.service';\n\n@Component({\n    selector: 'shield',\n    template: require('./shield.component.html')\n})\n\nexport class ShieldComponent {\n\n    constructor(public charService: CharService) {\n    };\n};\n\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./src/app/char/shield/shield.component.ts","import { Component } from '@angular/core';\nimport {Skill} from \"./skill\";\nimport {AbilityService} from \"../abilities/ability.service\";\nimport {CharService} from \"../char.service\";\n\n@Component({\n    selector: 'skills',\n    template: require('./skills.component.html'),\n})\n\nexport class SkillsComponent {\n    public skills:Skill[] = Skill.ALL;\n\n    constructor(public charService: CharService) {}\n\n    public isClassSkill(skill:Skill):boolean {\n        return this.charService.getClassSkills().indexOf(skill) !== -1;\n    }\n\n    public maxClassSkillRank():number {\n        return this.charService.getTotalLevel() + 3;\n    }\n\n    public maxCrossClassSkillRank():number {\n        return Math.round(this.maxClassSkillRank() / 2.1);\n    }\n};\n\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./src/app/char/skills/skills.component.ts","export class Weapon {\n    \n}\n\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./src/app/char/weapons/weapon.ts","import { Component } from '@angular/core';\nimport {Weapon} from \"./weapon\";\n\n@Component({\n    selector: 'weapons',\n    template: require('./weapons.component.html')\n})\n\nexport class WeaponsComponent {\n    public weapons:Weapon[] = [new Weapon(), new Weapon(), new Weapon()];\n};\n\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./src/app/char/weapons/weapons.component.ts","/**\n * Created by sargon on 7/16/16.\n */\nexport class ClassesFormulas {\n\n    public static none(level: number): number {\n        return 0;\n    }\n\n    public static getHighBAB(level:number): number {\n        return Number(level);\n    }\n\n    public static getMediumBAB(level:number): number {\n        level = Number(level);\n        return level > 0\n            ? (level - 1) - Math.round((level - 1) / 4.1)\n            : 0;\n    }\n\n    public static getLowBAB(level:number): number {\n        level = Number(level);\n        return level > 0\n            ? (level - 1) - Math.round((level - 1) / 2.1)\n            : 0;\n    }\n\n    public static getHighSave(level:number): number {\n        level = Number(level);\n        return level > 0\n            ? 2 + ClassesFormulas.getLowBAB(level)\n            : 0;\n    }\n\n    public static getLowSave(level:number): number {\n        level = Number(level);\n        return level > 0\n            ? Math.round(level / 3.1)\n            : 0;\n    }\n}\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./src/app/classes/classesFormulas.ts","/**\n * Created by sargon on 7/16/16.\n */\nexport class Item {\n\n    public name:string;\n    public bonus:number;\n\n    constructor(name:string, bonus:number) {\n        this.name = name;\n        this.bonus = bonus;\n    }\n\n    public getName():string {\n        return this.name;\n    };\n\n    public getBonus():number {\n        return this.bonus;\n    };\n}\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./src/app/items/item.ts","/**\n * Created by gsvitlychnyi on 1/28/17.\n */\nexport class Sizes {\n\n  public static ALL: Sizes[] = [];\n  public static FINE: Sizes = new Sizes('f', 'Fine', 8, 8, -16, 16, 0);\n  public static DIMINUTIVE: Sizes = new Sizes('d', 'Diminutive', 4, 4, -12, 12, 0);\n  public static TINY: Sizes = new Sizes('t', 'Tiny', 2, 2, -8, 8, 0);\n  public static SMALL: Sizes = new Sizes('s', 'Small', 1, 1, -4, 4, 5);\n  public static MEDIUM: Sizes = new Sizes('m', 'Medium', 0, 0, 0, 0, 5);\n  public static LARGE: Sizes = new Sizes('l', 'Large', -1, -1, 4, -4, 10);\n  public static HUGE: Sizes = new Sizes('h', 'Huge', -2, -2, 8, -8, 15);\n  public static GARGANTUAN: Sizes = new Sizes('g', 'Gargantuan', -4, -4, 12, -12, 20);\n  public static COLOSSAL: Sizes = new Sizes('c', 'Colossal', -8, -8, 16, -16, 30);\n\n  private name: string;\n  private description: string;\n  private armorModifier: number;\n  private attackModifier: number;\n  private specialAttackModifier: number;\n  private hideModifier: number;\n  private reach: number;\n\n  constructor(name, description,\n              armorModifier, attackModifier, specialAttackModifier, hideModifier,\n              reach) {\n    this.name = name || '';\n    this.description = description || '';\n    this.armorModifier = Number(armorModifier || 0);\n    this.attackModifier = Number(attackModifier || 0);\n    this.specialAttackModifier = Number(specialAttackModifier || 0);\n    this.reach = Number(reach || 5);\n    Sizes.ALL.push(this);\n  }\n\n  public static getClass(name:string):Sizes {\n    return Sizes.ALL.find((charSize: Sizes) => {\n      return charSize.getName() === name;\n    });\n  }\n\n  public getName(): string {\n    return this.name;\n  }\n\n  public getDescription(): string {\n    return this.description;\n  }\n\n  public getArmorModifier(): number {\n    return Number(this.armorModifier);\n  }\n\n  public getAttackModifier(): number {\n    return Number(this.attackModifier);\n  }\n\n  public getSpecialAttackModifier(): number {\n    return Number(this.specialAttackModifier);\n  }\n\n  public getHideModifier(): number {\n    return Number(this.hideModifier);\n  }\n\n  public getReach(): number {\n    return Number(this.reach);\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./src/app/size/sizes.ts","exports = module.exports = require(\"./../../node_modules/css-loader/lib/css-base.js\")();\n// imports\nexports.push([module.id, \"@import url(https://maxcdn.bootstrapcdn.com/bootstrap/3.3.6/css/bootstrap.min.css);\", \"\"]);\n\n// module\nexports.push([module.id, \"/* this file will be extracted to main dist folder and is imported in index.html */\\n/* This file is for setting global styles  */\\nnav {\\n  margin-top: 16px; }\\n\\nnav a {\\n  background-color: #00838F;\\n  color: white;\\n  padding: 8px 16px;\\n  margin: 8px;\\n  vertical-align: middle;\\n  line-height: 1.25;\\n  text-align: center;\\n  text-decoration: none;\\n  border-radius: 4px; }\\n\\n/* app css stylesheet */\\n.menu {\\n  list-style: none;\\n  border-bottom: 0.1em solid black;\\n  margin-bottom: 2em;\\n  padding: 0 0 0.5em; }\\n\\n.menu:before {\\n  content: \\\"[\\\"; }\\n\\n.menu:after {\\n  content: \\\"]\\\"; }\\n\\n.menu > li {\\n  display: inline; }\\n\\n.menu > li:before {\\n  content: \\\"|\\\";\\n  padding-right: 0.3em; }\\n\\n.menu > li:nth-child(1):before {\\n  content: \\\"\\\";\\n  padding: 0; }\\n\\nbody {\\n  max-width: 1100px;\\n  min-width: 1100px;\\n  display: block;\\n  margin: auto;\\n  padding: 30px; }\\n\\n.no-gutter .row > [class*='col-'] {\\n  padding-right: 5px;\\n  padding-left: 5px; }\\n\\n.form-control {\\n  text-align: center; }\\n\\n.skillTable {\\n  width: 100%;\\n  position: absolute;\\n  left: 0;\\n  top: 230px; }\\n\\n.skillTable .row {\\n  margin-top: 0;\\n  margin-bottom: 0; }\\n\\n.skillTable input[type=checkbox] {\\n  margin: 0;\\n  padding: 0; }\\n\\n.skillTable .input-sm {\\n  height: 13px;\\n  font-size: 11px;\\n  line-height: 11px;\\n  padding: 0px;\\n  border-top: none;\\n  border-left: none;\\n  border-right: none;\\n  box-shadow: none; }\\n\\np,\\nlabel {\\n  margin: 0 0 2px; }\\n\\n.row {\\n  margin-top: 4px; }\\n\\n.inverse {\\n  background: black !important;\\n  color: white !important;\\n  font-weight: 600;\\n  border-radius: 9px 9px 0 0; }\\n\\nselect.input-sm {\\n  height: 25px !important; }\\n\\n@media print {\\n  .download {\\n    display: none !important; }\\n  button {\\n    display: none !important; }\\n  input,\\n  textarea {\\n    box-shadow: none !important;\\n    outline: none !important; }\\n  .skillTable input {\\n    border-bottom: 1px dashed !important; }\\n  .inverse,\\n  .weapon label {\\n    -webkit-print-color-adjust: exact; }\\n  .str input,\\n  .dex input,\\n  .con input,\\n  .int input,\\n  .wis input,\\n  .cha input {\\n    -webkit-print-color-adjust: exact; } }\\n\\n.avatar {\\n  margin: 0 0 0 45px;\\n  position: absolute; }\\n\\n.input-sm {\\n  height: 25px; }\\n\\n.weapon {\\n  margin-top: 10px;\\n  padding: 0 10px; }\\n\\n.weapon .row {\\n  margin-top: 0px;\\n  margin-bottom: 0px; }\\n\\n.weapon label {\\n  background: black !important;\\n  color: white !important;\\n  width: 100%; }\\n\\n.weapon .header label {\\n  margin-top: 10px; }\\n\\n.weapon .row > [class*='col-'] {\\n  padding-right: 0;\\n  padding-left: 0; }\\n\\n.str input {\\n  background-color: rgba(255, 0, 0, 0.1) !important; }\\n\\n.dex input {\\n  background-color: rgba(51, 153, 51, 0.1) !important; }\\n\\n.con input {\\n  background-color: rgba(0, 102, 255, 0.1) !important; }\\n\\n.int input {\\n  background-color: rgba(204, 51, 255, 0.1) !important; }\\n\\n.wis input {\\n  background-color: rgba(255, 102, 0, 0.1) !important; }\\n\\n.cha input {\\n  background-color: rgba(255, 255, 0, 0.1) !important; }\\n\\ninput[type=\\\"number\\\"] {\\n  padding: 1px 0px; }\\n\\ninput::-webkit-outer-spin-button,\\ninput::-webkit-inner-spin-button {\\n  /* display: none; <- Crashes Chrome on hover */\\n  -webkit-appearance: none; }\\n\\n.col-lg-1, .col-lg-10, .col-lg-11, .col-lg-12, .col-lg-2, .col-lg-3, .col-lg-4, .col-lg-5, .col-lg-6, .col-lg-7, .col-lg-8, .col-lg-9, .col-md-1, .col-md-10, .col-md-11, .col-md-12, .col-md-2, .col-md-3, .col-md-4, .col-md-5, .col-md-6, .col-md-7, .col-md-8, .col-md-9, .col-sm-1, .col-sm-10, .col-sm-11, .col-sm-12, .col-sm-2, .col-sm-3, .col-sm-4, .col-sm-5, .col-sm-6, .col-sm-7, .col-sm-8, .col-sm-9, .col-xs-1, .col-xs-10, .col-xs-11, .col-xs-12, .col-xs-2, .col-xs-3, .col-xs-4, .col-xs-5, .col-xs-6, .col-xs-7, .col-xs-8, .col-xs-9 {\\n  position: relative;\\n  min-height: 1px;\\n  padding-right: 5px;\\n  padding-left: 5px; }\\n\", \"\"]);\n\n// exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/css-loader!./~/sass-loader!./src/styles/styles.scss\n// module id = 69\n// module chunks = 0","exports = module.exports = require(\"./../../node_modules/css-loader/lib/css-base.js\")();\n// imports\n\n\n// module\nexports.push([module.id, \"html, body{\\n  height: 100%;\\n  font-family: Arial, Helvetica, sans-serif\\n}\\n\\na.active {\\n  background-color: gray;\\n}\\n\", \"\"]);\n\n// exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/css-loader!./src/app/app.component.css\n// module id = 70\n// module chunks = 0","exports = module.exports = require(\"./../../node_modules/css-loader/lib/css-base.js\")();\n// imports\n\n\n// module\nexports.push([module.id, \"h1 {\\n  color: #00BCD4;\\n}\", \"\"]);\n\n// exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/css-loader!./src/styles/headings.css\n// module id = 71\n// module chunks = 0","module.exports = \"<div class=\\\"row\\\">\\n    <div class=\\\"col-xs-3\\\"></div>\\n    <div class=\\\"col-xs-2\\\"><label class=\\\"text-uppercase\\\">Ability Score</label></div>\\n    <div class=\\\"col-xs-2\\\"><label class=\\\"text-uppercase\\\">Ability Modifier</label></div>\\n    <div class=\\\"col-xs-2\\\"><label class=\\\"text-uppercase\\\">Ench Score</label></div>\\n    <div class=\\\"col-xs-2\\\"><label class=\\\"text-uppercase\\\">Temp Score</label></div>\\n</div>\\n<div class=\\\"row\\\" *ngFor=\\\"let ability of abilities\\\">\\n    <div class=\\\"col-xs-3\\\">\\n        <input type=\\\"text\\\" value=\\\"{{ability.getName()}}\\\" class=\\\"form-control input-sm text-uppercase inverse\\\"/>\\n    </div>\\n    <div class=\\\"col-xs-2 {{ability.getName()}}\\\">\\n        <input type=\\\"number\\\" class=\\\"form-control input-sm\\\" [(ngModel)]=\\\"_charService.getChar().abilities[ability.getName()]\\\"/>\\n    </div>\\n    <div class=\\\"col-xs-2 {{ability.getName()}}\\\">\\n        <input type=\\\"text\\\" readonly class=\\\"form-control input-sm\\\" value=\\\"{{ _charService.getAbilityModifier(ability) }}\\\"/>\\n    </div>\\n    <div class=\\\"col-xs-2 {{ability.getName()}}\\\">\\n        <input type=\\\"number\\\" class=\\\"form-control input-sm\\\" [(ngModel)]=\\\"_charService.getChar().ench_abilities[ability.getName()]\\\"/>\\n    </div>\\n    <div class=\\\"col-xs-2 {{ability.getName()}}\\\">\\n        <input type=\\\"number\\\" class=\\\"form-control input-sm\\\" [(ngModel)]=\\\"_charService.getChar().tmp_abilities[ability.getName()]\\\"/>\\n    </div>\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/char/abilities/abilities.component.html\n// module id = 72\n// module chunks = 0","module.exports = \"<div class=\\\"row\\\">\\n    <div class=\\\"col-xs-5\\\">\\n        <div class=\\\"row\\\">\\n            <div class=\\\"col-xs-3 col-xs-offset-3\\\"><label class=\\\"text-uppercase\\\">Total</label></div>\\n            <div class=\\\"col-xs-3 col-xs-offset-2\\\"><label class=\\\"text-uppercase\\\">Armor Bonus</label></div>\\n        </div>\\n    </div>\\n    <div class=\\\"col-xs-7\\\">\\n        <div class=\\\"row\\\">\\n            <div class=\\\"col-xs-2\\\"><label class=\\\"text-uppercase\\\">Shield Bonus</label></div>\\n            <div class=\\\"col-xs-2\\\"><label class=\\\"text-uppercase\\\">Dex / Wis Modifier</label></div>\\n            <div class=\\\"col-xs-2\\\"><label class=\\\"text-uppercase\\\">Defl. Modifier</label></div>\\n            <div class=\\\"col-xs-2\\\"><label class=\\\"text-uppercase\\\">Natural Modifier</label></div>\\n            <div class=\\\"col-xs-2\\\"><label class=\\\"text-uppercase\\\">Luck Modifier</label></div>\\n            <div class=\\\"col-xs-2\\\"><label class=\\\"text-uppercase\\\">Misc Modifier</label></div>\\n        </div>\\n    </div>\\n</div>\\n\\n<div class=\\\"row\\\">\\n    <div class=\\\"col-xs-5\\\">\\n        <div class=\\\"row\\\">\\n            <div class=\\\"col-xs-3\\\"><input type=\\\"text\\\" value=\\\"AC\\\" class=\\\"form-control input-sm inverse\\\"/></div>\\n            <div class=\\\"col-xs-3\\\"><input type=\\\"text\\\" readonly value=\\\"{{getAC()}}\\\" class=\\\"form-control input-sm\\\"/></div>\\n            <div class=\\\"col-xs-2\\\"><input type=\\\"text\\\" readonly value=\\\"10\\\" class=\\\"form-control input-sm\\\"/></div>\\n            <div class=\\\"col-xs-3\\\"><input type=\\\"text\\\" readonly value=\\\"{{charService.getChar().armor.bonus}}\\\" class=\\\"form-control input-sm\\\"/></div>\\n        </div>\\n    </div>\\n    <div class=\\\"col-xs-7\\\">\\n        <div class=\\\"row\\\">\\n            <div class=\\\"col-xs-2\\\"><input type=\\\"text\\\" readonly value=\\\"{{charService.getChar().shield.bonus}}\\\" class=\\\"form-control input-sm\\\"/></div>\\n            <div class=\\\"col-xs-2 dex\\\"><input type=\\\"text\\\" readonly value=\\\"{{charService.getAbilityModifier(dex)}}\\\" class=\\\"form-control input-sm\\\"/></div>\\n            <div class=\\\"col-xs-2\\\">\\n                <input type=\\\"text\\\" [(ngModel)]=\\\"charService.getChar().armor_bonuses.deflection\\\" class=\\\"form-control input-sm\\\"/>\\n            </div>\\n            <div class=\\\"col-xs-2\\\">\\n                <input type=\\\"text\\\" [(ngModel)]=\\\"charService.getChar().armor_bonuses.natural\\\" class=\\\"form-control input-sm\\\"/>\\n            </div>\\n            <div class=\\\"col-xs-2\\\">\\n                <input type=\\\"text\\\" [(ngModel)]=\\\"charService.getChar().armor_bonuses.luck\\\" class=\\\"form-control input-sm\\\"/>\\n            </div>\\n            <div class=\\\"col-xs-2\\\">\\n                <input type=\\\"text\\\" [(ngModel)]=\\\"charService.getChar().armor_bonuses.misc\\\" class=\\\"form-control input-sm\\\"/>\\n            </div>\\n        </div>\\n    </div>\\n</div>\\n\\n<div class=\\\"row\\\">\\n    <div class=\\\"col-xs-5\\\">\\n        <div class=\\\"row\\\">\\n            <div class=\\\"col-xs-3\\\"><input type=\\\"text\\\" value=\\\"FF\\\" class=\\\"form-control input-sm inverse\\\"/></div>\\n            <div class=\\\"col-xs-3\\\"><input type=\\\"text\\\" readonly value=\\\"{{getFF()}}\\\" class=\\\"form-control input-sm\\\"/></div>\\n        </div>\\n    </div>\\n    <div class=\\\"col-xs-7\\\">\\n        <div class=\\\"row\\\">\\n            <div class=\\\"col-xs-2 col-xs-offset-2 wis\\\">\\n                <input type=\\\"text\\\" readonly value=\\\"{{getWisdomModifier()}}\\\" class=\\\"form-control input-sm\\\"/>\\n            </div>\\n            <div class=\\\"col-xs-5 col-xs-offset-1\\\">\\n                <input type=\\\"text\\\" value=\\\"Damage Reduction\\\" class=\\\"form-control input-sm inverse\\\"/>\\n            </div>\\n            <div class=\\\"col-xs-2\\\"><input type=\\\"text\\\" [(ngModel)]=\\\"charService.getChar().dr\\\" class=\\\"form-control input-sm\\\"/></div>\\n        </div>\\n    </div>\\n</div>\\n\\n<div class=\\\"row\\\">\\n    <div class=\\\"col-xs-5\\\">\\n        <div class=\\\"row\\\">\\n            <div class=\\\"col-xs-3\\\"><input type=\\\"text\\\" value=\\\"T\\\" class=\\\"form-control input-sm inverse\\\"/></div>\\n            <div class=\\\"col-xs-3\\\"><input type=\\\"text\\\" readonly value=\\\"{{getTouch()}}\\\" class=\\\"form-control input-sm\\\"/></div>\\n        </div>\\n    </div>\\n    <div class=\\\"col-xs-7\\\">\\n        <div class=\\\"row\\\">\\n            <div class=\\\"col-xs-2 col-xs-offset-2 wis\\\">\\n                <input type=\\\"text\\\" readonly value=\\\"{{getWisdomModifier()}}\\\" class=\\\"form-control input-sm\\\"/>\\n            </div>\\n            <div class=\\\"col-xs-5 col-xs-offset-1\\\">\\n                <input type=\\\"text\\\" value=\\\"Spell Resistance\\\" class=\\\"form-control input-sm inverse\\\"/>\\n            </div>\\n            <div class=\\\"col-xs-2\\\"><input type=\\\"text\\\" [(ngModel)]=\\\"charService.getChar().sr\\\" class=\\\"form-control input-sm\\\"/></div>\\n        </div>\\n    </div>\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/char/ac/ac.component.html\n// module id = 73\n// module chunks = 0","module.exports = \"<div class=\\\"weapon\\\">\\n    <div class=\\\"row header\\\">\\n        <div class=\\\"col-xs-12\\\">\\n            <div class=\\\"row\\\">\\n                <div class=\\\"col-xs-6\\\">\\n                    <input class=\\\"form-control input-sm text-uppercase inverse\\\" value=\\\"Armor\\\"/>\\n                </div>\\n                <div class=\\\"col-xs-2\\\">\\n                    <label class=\\\"text-uppercase\\\">Type</label>\\n                </div>\\n                <div class=\\\"col-xs-2\\\">\\n                    <label class=\\\"text-uppercase\\\">Armor Bonus</label>\\n                </div>\\n                <div class=\\\"col-xs-2\\\">\\n                    <label class=\\\"text-uppercase\\\">Max Dex Bonus</label>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n    <div class=\\\"row\\\">\\n        <div class=\\\"col-xs-12\\\">\\n            <div class=\\\"row\\\">\\n                <div class=\\\"col-xs-6\\\">\\n                    <input class=\\\"form-control input-sm\\\" [(ngModel)]=\\\"charService.getChar().armor.name\\\"/>\\n                </div>\\n                <div class=\\\"col-xs-2\\\">\\n                    <input class=\\\"text-uppercase form-control input-sm\\\" value=\\\"\\\"/>\\n                </div>\\n                <div class=\\\"col-xs-2\\\">\\n                    <input class=\\\"text-uppercase form-control input-sm\\\" [(ngModel)]=\\\"charService.getChar().armor.bonus\\\"/>\\n                </div>\\n                <div class=\\\"col-xs-2\\\">\\n                    <input class=\\\"text-uppercase form-control input-sm\\\" value=\\\"\\\"/>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n    <div class=\\\"row\\\">\\n        <div class=\\\"col-xs-12\\\">\\n            <div class=\\\"row\\\">\\n                <div class=\\\"col-xs-2\\\">\\n                    <label class=\\\"text-uppercase\\\">Check Penalty</label>\\n                </div>\\n                <div class=\\\"col-xs-2\\\">\\n                    <label class=\\\"text-uppercase\\\">Spell Failure</label>\\n                </div>\\n                <div class=\\\"col-xs-2\\\">\\n                    <label class=\\\"text-uppercase\\\">Speed</label>\\n                </div>\\n                <div class=\\\"col-xs-2\\\">\\n                    <label class=\\\"text-uppercase\\\">Weight</label>\\n                </div>\\n                <div class=\\\"col-xs-4\\\">\\n                    <label class=\\\"text-uppercase\\\">Special Properties</label>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n    <div class=\\\"row\\\">\\n        <div class=\\\"col-xs-12\\\">\\n            <div class=\\\"row\\\">\\n                <div class=\\\"col-xs-2\\\">\\n                    <input class=\\\"text-uppercase form-control input-sm\\\" value=\\\"\\\"/>\\n                </div>\\n                <div class=\\\"col-xs-2\\\">\\n                    <input class=\\\"text-uppercase form-control input-sm\\\" value=\\\"\\\"/>\\n                </div>\\n                <div class=\\\"col-xs-2\\\">\\n                    <input class=\\\"text-uppercase form-control input-sm\\\" value=\\\"\\\"/>\\n                </div>\\n                <div class=\\\"col-xs-2\\\">\\n                    <input class=\\\"text-uppercase form-control input-sm\\\" value=\\\"\\\"/>\\n                </div>\\n                <div class=\\\"col-xs-4\\\">\\n                    <input class=\\\"text-uppercase form-control input-sm\\\" value=\\\"\\\"/>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/char/armor/armor.component.html\n// module id = 74\n// module chunks = 0","module.exports = \"<div class=\\\"row\\\">\\n    <div class=\\\"col-xs-5\\\">\\n        <div class=\\\"row\\\">\\n            <div class=\\\"col-xs-8\\\">\\n                <label class=\\\"text-uppercase\\\">Attack Bonus</label>\\n            </div>\\n            <div class=\\\"col-xs-3\\\">\\n                <label class=\\\"text-uppercase\\\">Total</label>\\n            </div>\\n        </div>\\n    </div>\\n    <div class=\\\"col-xs-7\\\">\\n        <div class=\\\"row\\\">\\n            <div class=\\\"col-xs-2\\\">\\n                <label class=\\\"text-uppercase\\\">BAB</label>\\n            </div>\\n            <div class=\\\"col-xs-2\\\">\\n                <label class=\\\"text-uppercase\\\">Ability Modifier</label>\\n            </div>\\n            <div class=\\\"col-xs-2\\\">\\n                <label class=\\\"text-uppercase\\\">Size Modifier</label>\\n            </div>\\n            <div class=\\\"col-xs-2\\\">\\n                <label class=\\\"text-uppercase\\\">Misc Modifier</label>\\n            </div>\\n            <div class=\\\"col-xs-2\\\">\\n                <label class=\\\"text-uppercase\\\">Temp Modifier</label>\\n            </div>\\n            <div class=\\\"col-xs-2\\\">\\n                <label class=\\\"text-uppercase\\\">Other Modifiers</label>\\n            </div>\\n        </div>\\n    </div>\\n</div>\\n<div class=\\\"row\\\" *ngFor=\\\"let attack of attacks\\\">\\n    <div class=\\\"col-xs-5\\\">\\n        <div class=\\\"row\\\">\\n            <div class=\\\"col-xs-8\\\">\\n                <input class=\\\"text-uppercase inverse form-control input-sm\\\" value=\\\"{{attack.getName()}}\\\" />\\n            </div>\\n            <div class=\\\"col-xs-3\\\">\\n                <input class=\\\"text-uppercase form-control input-sm\\\" value=\\\"\\\" />\\n            </div>\\n        </div>\\n    </div>\\n    <div class=\\\"col-xs-7\\\">\\n        <div class=\\\"row\\\">\\n            <div class=\\\"col-xs-2\\\">\\n                <input class=\\\"text-uppercase form-control input-sm\\\" value=\\\"\\\" />\\n            </div>\\n            <div class=\\\"col-xs-2 {{attack.getAbility().getName()}}\\\">\\n                <input class=\\\"text-uppercase form-control input-sm\\\" value=\\\"\\\" />\\n            </div>\\n            <div class=\\\"col-xs-2\\\">\\n                <input class=\\\"text-uppercase form-control input-sm\\\" value=\\\"\\\" />\\n            </div>\\n            <div class=\\\"col-xs-2\\\">\\n                <input class=\\\"text-uppercase form-control input-sm\\\" value=\\\"\\\" />\\n            </div>\\n            <div class=\\\"col-xs-2\\\">\\n                <input class=\\\"text-uppercase form-control input-sm\\\" value=\\\"\\\" />\\n            </div>\\n            <div class=\\\"col-xs-2\\\">\\n                <input class=\\\"text-uppercase form-control input-sm\\\" value=\\\"\\\" />\\n            </div>\\n        </div>\\n    </div>\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/char/attacks/attacks.component.html\n// module id = 75\n// module chunks = 0","module.exports = \"<div class=\\\"download\\\">\\n    <button (click)=\\\"download()\\\">Download</button>\\n    <input id=\\\"file\\\" type=\\\"file\\\" (change)=\\\"upload($event)\\\"/>\\n</div>\\n\\n<header></header>\\n\\n<div style=\\\"font-size: 10px; text-align: center\\\">\\n    <div class=\\\"row\\\">\\n        <div class=\\\"col-xs-7\\\">\\n            <div class=\\\"row\\\">\\n                <div class=\\\"col-xs-6\\\">\\n                    <abilities></abilities>\\n                </div>\\n                <div class=\\\"col-xs-6\\\">\\n                    <hp></hp>\\n                </div>\\n            </div>\\n        </div>\\n        <div class=\\\"col-xs-5\\\">\\n            <skills class=\\\"skillTable\\\"></skills>\\n        </div>\\n    </div>\\n    <div class=\\\"row\\\">\\n        <div class=\\\"col-xs-7\\\">\\n            <ac></ac>\\n        </div>\\n    </div>\\n    <div class=\\\"row\\\">\\n        <div class=\\\"col-xs-7\\\">\\n            <saves></saves>\\n        </div>\\n    </div>\\n    <div class=\\\"row\\\">\\n        <div class=\\\"col-xs-7\\\">\\n            <attacks></attacks>\\n        </div>\\n    </div>\\n    <div class=\\\"row\\\">\\n        <div class=\\\"col-xs-7\\\">\\n            <weapons></weapons>\\n        </div>\\n    </div>\\n    <div class=\\\"row\\\">\\n        <div class=\\\"col-xs-7\\\">\\n            <armor></armor>\\n        </div>\\n    </div>\\n    <div class=\\\"row\\\">\\n        <div class=\\\"col-xs-7\\\">\\n            <shield></shield>\\n        </div>\\n    </div>\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/char/char.component.html\n// module id = 76\n// module chunks = 0","module.exports = \"<div class=\\\"row\\\">\\n    <div class=\\\"col-xs-8\\\">\\n        <div class=\\\"row\\\">\\n            <div class=\\\"col-xs-3\\\">\\n                <input type=\\\"text\\\" id=\\\"charName\\\" class=\\\"form-control input-sm\\\" [(ngModel)]=\\\"charService.getChar().name\\\"/>\\n                <label for=\\\"charName\\\" class=\\\"text-uppercase\\\">Character Name</label>\\n            </div>\\n\\n            <div class=\\\"col-xs-2\\\">\\n                <select type=\\\"text\\\" id=\\\"class1\\\" class=\\\"form-control input-sm\\\"\\n                        [(ngModel)]=\\\"charService.getChar().classes.class1.name\\\">\\n                    <option *ngFor=\\\"let charClass of classes\\\" value=\\\"{{charClass.getName()}}\\\">{{charClass.getName()}}</option>\\n                </select>\\n                <label for=\\\"class1\\\" class=\\\"text-uppercase\\\">Class</label>\\n            </div>\\n            <div class=\\\"col-xs-1\\\">\\n                <select id=\\\"class1Level\\\" class=\\\"form-control input-sm\\\"\\n                        [(ngModel)]=\\\"charService.getChar().classes.class1.level\\\">\\n                    <option value=\\\"0\\\"></option>\\n                    <option *ngFor=\\\"let level of levels\\\" value=\\\"{{level}}\\\">{{level}}</option>\\n                </select>\\n                <label for=\\\"class1Level\\\" class=\\\"text-uppercase\\\">Level</label>\\n            </div>\\n\\n            <div class=\\\"col-xs-2\\\">\\n                <input type=\\\"text\\\" id=\\\"alignment\\\" class=\\\"form-control input-sm\\\" [(ngModel)]=\\\"charService.getChar().alignment\\\"/>\\n                <label for=\\\"alignment\\\" class=\\\"text-uppercase\\\">Alignment</label>\\n            </div>\\n\\n            <div class=\\\"col-xs-4\\\">\\n                <input type=\\\"text\\\" id=\\\"deities\\\" class=\\\"form-control input-sm\\\" [(ngModel)]=\\\"charService.getChar().deities\\\"/>\\n                <label for=\\\"deities\\\" class=\\\"text-uppercase\\\">Deities</label>\\n            </div>\\n        </div>\\n        <div class=\\\"row\\\">\\n            <div class=\\\"col-xs-3\\\">\\n                <div class=\\\"col-xs-6\\\">\\n                    <input type=\\\"text\\\" id=\\\"race\\\" class=\\\"form-control input-sm\\\" [(ngModel)]=\\\"charService.getChar().race\\\"/>\\n                    <label for=\\\"race\\\" class=\\\"text-uppercase\\\">Race</label>\\n                </div>\\n\\n                <div class=\\\"col-xs-6\\\">\\n                    <select id=\\\"size\\\" class=\\\"form-control input-sm\\\" [(ngModel)]=\\\"charService.getChar().size\\\">\\n                        <option *ngFor=\\\"let size of sizes\\\" value=\\\"{{size.getName()}}\\\">{{size.getDescription()}}</option>\\n                    </select>\\n                    <label for=\\\"size\\\" class=\\\"text-uppercase\\\">Size</label>\\n                </div>\\n            </div>\\n\\n            <div class=\\\"col-xs-2\\\">\\n                <select type=\\\"text\\\" id=\\\"class2\\\" class=\\\"form-control input-sm\\\"\\n                        [(ngModel)]=\\\"charService.getChar().classes.class2.name\\\">\\n                    <option *ngFor=\\\"let charClass of classes\\\" value=\\\"{{charClass.getName()}}\\\">{{charClass.getName()}}</option>\\n                </select>\\n                <label for=\\\"class2\\\" class=\\\"text-uppercase\\\">Class</label>\\n            </div>\\n            <div class=\\\"col-xs-1\\\">\\n                <select id=\\\"class2Level\\\" class=\\\"form-control input-sm\\\"\\n                        [(ngModel)]=\\\"charService.getChar().classes.class2.level\\\">\\n                    <option value=\\\"0\\\"></option>\\n                    <option *ngFor=\\\"let level of levels\\\" value=\\\"{{level}}\\\">{{level}}</option>\\n                </select>\\n                <label for=\\\"class2Level\\\" class=\\\"text-uppercase\\\">Level</label>\\n            </div>\\n\\n            <div class=\\\"col-xs-2\\\">\\n                <input type=\\\"text\\\" id=\\\"sex\\\" class=\\\"form-control input-sm\\\" [(ngModel)]=\\\"charService.getChar().sex\\\"/>\\n                <label for=\\\"sex\\\" class=\\\"text-uppercase\\\">Sex</label>\\n            </div>\\n\\n            <div class=\\\"col-xs-2\\\">\\n                <input type=\\\"text\\\" id=\\\"eyes\\\" class=\\\"form-control input-sm\\\" [(ngModel)]=\\\"charService.getChar().eyes\\\"/>\\n                <label for=\\\"eyes\\\" class=\\\"text-uppercase\\\">Eyes</label>\\n            </div>\\n\\n            <div class=\\\"col-xs-2\\\">\\n                <input type=\\\"text\\\" id=\\\"heir\\\" class=\\\"form-control input-sm\\\" [(ngModel)]=\\\"charService.getChar().heir\\\"/>\\n                <label for=\\\"heir\\\" class=\\\"text-uppercase\\\">Heir</label>\\n            </div>\\n        </div>\\n        <div class=\\\"row\\\">\\n            <div class=\\\"col-xs-3\\\">\\n                <input type=\\\"text\\\" id=\\\"playerName\\\" class=\\\"form-control input-sm\\\" [(ngModel)]=\\\"charService.getChar().player\\\"/>\\n                <label for=\\\"playerName\\\" class=\\\"text-uppercase\\\">Player Name</label>\\n            </div>\\n\\n            <div class=\\\"col-xs-2\\\">\\n                <select type=\\\"text\\\" id=\\\"class3\\\" class=\\\"form-control input-sm\\\"\\n                        [(ngModel)]=\\\"charService.getChar().classes.class3.name\\\">\\n                    <option *ngFor=\\\"let charClass of classes\\\" value=\\\"{{charClass.getName()}}\\\">{{charClass.getName()}}</option>\\n                </select>\\n                <label for=\\\"class3\\\" class=\\\"text-uppercase\\\">Class</label>\\n            </div>\\n            <div class=\\\"col-xs-1\\\">\\n                <select id=\\\"class3Level\\\" class=\\\"form-control input-sm\\\"\\n                        [(ngModel)]=\\\"charService.getChar().classes.class3.level\\\">\\n                    <option value=\\\"0\\\"></option>\\n                    <option *ngFor=\\\"let level of levels\\\" value=\\\"{{level}}\\\">{{level}}</option>\\n                </select>\\n                <label for=\\\"class3Level\\\" class=\\\"text-uppercase\\\">Level</label>\\n            </div>\\n\\n            <div class=\\\"col-xs-2\\\">\\n                <input type=\\\"text\\\" id=\\\"age\\\" class=\\\"form-control input-sm\\\" [(ngModel)]=\\\"charService.getChar().age\\\"/>\\n                <label for=\\\"age\\\" class=\\\"text-uppercase\\\">Age</label>\\n            </div>\\n\\n            <div class=\\\"col-xs-2\\\">\\n                <input type=\\\"text\\\" id=\\\"height\\\" class=\\\"form-control input-sm\\\" [(ngModel)]=\\\"charService.getChar().height\\\"/>\\n                <label for=\\\"height\\\" class=\\\"text-uppercase\\\">Height</label>\\n            </div>\\n\\n            <div class=\\\"col-xs-2\\\">\\n                <input type=\\\"text\\\" id=\\\"weight\\\" class=\\\"form-control input-sm\\\" [(ngModel)]=\\\"charService.getChar().weight\\\"/>\\n                <label for=\\\"weight\\\" class=\\\"text-uppercase\\\">Weight</label>\\n            </div>\\n        </div>\\n    </div>\\n    <div class=\\\"col-xs-3\\\">\\n        <img class=\\\"img-responsive avatar\\\"  src=\\\"app/resources/imgs/{{charService.getChar().avatar}}\\\">\\n    </div>\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/char/header/header.component.html\n// module id = 77\n// module chunks = 0","module.exports = \"<div class=\\\"row\\\">\\n    <div class=\\\"col-xs-4\\\"></div>\\n    <div class=\\\"col-xs-2\\\"><p class=\\\"text-uppercase\\\">Total</p></div>\\n    <div class=\\\"col-xs-2\\\"><p class=\\\"text-uppercase\\\">Ability Modifier</p></div>\\n    <div class=\\\"col-xs-2\\\"><p class=\\\"text-uppercase\\\">Misc Modifier</p></div>\\n</div>\\n<div class=\\\"row\\\">\\n    <div class=\\\"col-xs-4\\\"><input type=\\\"text\\\" readonly value=\\\"Initiative\\\" class=\\\"form-control input-sm inverse\\\"/></div>\\n    <div class=\\\"col-xs-2\\\"><input type=\\\"text\\\" readonly value=\\\"{{ (charService.getChar().initiative || 0) + charService.getAbilityModifier(dex) }}\\\" class=\\\"form-control input-sm\\\"/></div>\\n    <div class=\\\"col-xs-2 {{dex.getName()}}\\\"><input type=\\\"text\\\" readonly value=\\\"{{ charService.getAbilityModifier(dex) }}\\\" class=\\\"form-control input-sm\\\"/></div>\\n    <div class=\\\"col-xs-2\\\"><input type=\\\"number\\\" [(ngModel)]=\\\"charService.getChar().initiative\\\" class=\\\"form-control input-sm\\\"/></div>\\n</div>\\n<div class=\\\"row\\\">\\n    <div class=\\\"col-xs-4\\\"><input type=\\\"text\\\" readonly value=\\\"Speed\\\" class=\\\"form-control input-sm inverse\\\"/></div>\\n    <div class=\\\"col-xs-2\\\"><input type=\\\"text\\\" readonly value=\\\"{{charService.getChar().speed + (charService.getChar().speed_bonus || 0)}}\\\" class=\\\"form-control input-sm\\\"/></div>\\n    <div class=\\\"col-xs-2\\\"><input type=\\\"number\\\" [(ngModel)]=\\\"charService.getChar().speed\\\" class=\\\"form-control input-sm\\\"/></div>\\n    <div class=\\\"col-xs-2\\\"><input type=\\\"number\\\" [(ngModel)]=\\\"charService.getChar().speed_bonus\\\" class=\\\"form-control input-sm\\\"/></div>\\n</div>\\n<div class=\\\"row\\\">\\n    <div class=\\\"col-xs-4\\\"><input type=\\\"text\\\" value=\\\"HP\\\" class=\\\"form-control input-sm inverse\\\"/></div>\\n    <div class=\\\"col-xs-2\\\"><input type=\\\"number\\\" [(ngModel)]=\\\"charService.getChar().hp_max\\\" class=\\\"form-control input-sm\\\"/></div>\\n    <div class=\\\"col-xs-4\\\"><input type=\\\"number\\\" [(ngModel)]=\\\"charService.getChar().hp\\\" class=\\\"form-control input-sm\\\"/></div>\\n</div>\\n<div class=\\\"row\\\">\\n    <div class=\\\"col-xs-4\\\"><input type=\\\"text\\\" value=\\\"XP\\\" class=\\\"form-control input-sm inverse\\\"/></div>\\n    <div class=\\\"col-xs-3\\\"><input type=\\\"text\\\" readonly value=\\\"{{getNextLevelXP()}}\\\" class=\\\"form-control input-sm\\\"/></div>\\n    <div class=\\\"col-xs-3\\\"><input type=\\\"number\\\" [(ngModel)]=\\\"charService.getChar().xp\\\" class=\\\"form-control input-sm\\\"/></div>\\n</div>\\n<div class=\\\"row\\\">\\n    <div class=\\\"col-xs-6\\\"><input type=\\\"text\\\" value=\\\"Base Attack Bonus\\\" class=\\\"form-control input-sm inverse\\\"/></div>\\n    <div class=\\\"col-xs-4\\\"><input type=\\\"text\\\" readonly value=\\\"{{charService.getBAB()}}\\\" class=\\\"form-control input-sm\\\"/></div>\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/char/hp/hp.component.html\n// module id = 78\n// module chunks = 0","module.exports = \"<div class=\\\"row\\\">\\n    <div class=\\\"col-xs-5\\\">\\n        <div class=\\\"row\\\">\\n            <div class=\\\"col-xs-8\\\">\\n                <label class=\\\"text-uppercase\\\">Saving Throws</label>\\n            </div>\\n            <div class=\\\"col-xs-3\\\">\\n                <label class=\\\"text-uppercase\\\">Total</label>\\n            </div>\\n        </div>\\n    </div>\\n    <div class=\\\"col-xs-7\\\">\\n        <div class=\\\"row\\\">\\n            <div class=\\\"col-xs-2\\\">\\n                <label class=\\\"text-uppercase\\\">Base Save</label>\\n            </div>\\n            <div class=\\\"col-xs-2\\\">\\n                <label class=\\\"text-uppercase\\\">Ability Modifier</label>\\n            </div>\\n            <div class=\\\"col-xs-2\\\">\\n                <label class=\\\"text-uppercase\\\">Magic Modifier</label>\\n            </div>\\n            <div class=\\\"col-xs-2\\\">\\n                <label class=\\\"text-uppercase\\\">Misc Modifier</label>\\n            </div>\\n            <div class=\\\"col-xs-2\\\">\\n                <label class=\\\"text-uppercase\\\">Temp Modifier</label>\\n            </div>\\n            <div class=\\\"col-xs-2\\\">\\n                <label class=\\\"text-uppercase\\\">Other Modifiers</label>\\n            </div>\\n        </div>\\n    </div>\\n</div>\\n<div class=\\\"row\\\" *ngFor=\\\"let save of saves\\\">\\n    <div class=\\\"col-xs-5\\\">\\n        <div class=\\\"row\\\">\\n            <div class=\\\"col-xs-8\\\">\\n                <input class=\\\"text-uppercase inverse form-control input-sm\\\" value=\\\"{{save.getLabel()}}\\\" />\\n            </div>\\n            <div class=\\\"col-xs-3\\\">\\n                <input readonly class=\\\"text-uppercase form-control input-sm\\\" value=\\\"\\\" />\\n            </div>\\n        </div>\\n    </div>\\n    <div class=\\\"col-xs-7\\\">\\n        <div class=\\\"row\\\">\\n            <div class=\\\"col-xs-2\\\">\\n                <input readonly class=\\\"text-uppercase form-control input-sm\\\" value=\\\"{{charService.getSave(save.getAbility())}}\\\" />\\n            </div>\\n            <div class=\\\"col-xs-2 {{save.getAbility().getName()}}\\\">\\n                <input readonly class=\\\"text-uppercase form-control input-sm\\\" value=\\\"{{charService.getAbilityModifier(save.getAbility())}}\\\" />\\n            </div>\\n            <div class=\\\"col-xs-2\\\">\\n                <input class=\\\"text-uppercase form-control input-sm\\\" value=\\\"\\\" />\\n            </div>\\n            <div class=\\\"col-xs-2\\\">\\n                <input class=\\\"text-uppercase form-control input-sm\\\" value=\\\"\\\" />\\n            </div>\\n            <div class=\\\"col-xs-2\\\">\\n                <input class=\\\"text-uppercase form-control input-sm\\\" value=\\\"\\\" />\\n            </div>\\n            <div class=\\\"col-xs-2\\\">\\n                <input class=\\\"text-uppercase form-control input-sm\\\" value=\\\"\\\" />\\n            </div>\\n        </div>\\n    </div>\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/char/saves/saves.component.html\n// module id = 79\n// module chunks = 0","import {Ability} from \"./../abilities/abitly\";\n\nexport class Skill {\n\tpublic static ALL:Skill[] = [];\n\n    public static ALCHEMY:Skill = new Skill(\"alchemy\", \"Alchemy\", Ability.INT);\n    public static ANIMAL_EMPATHY:Skill = new Skill(\"animalEmpathy\", \"Animal Empathy\", Ability.CHA);\n    public static APPRISE:Skill = new Skill(\"apprise\", \"Apprise\", Ability.INT);\n    public static BALANCE:Skill = new Skill(\"balance\", \"Balance\", Ability.DEX);\n    public static BLUFF:Skill = new Skill(\"bluff\", \"Bluff\", Ability.CHA);\n    public static CLIMB:Skill = new Skill(\"climb\", \"Climb\", Ability.STR);\n    public static CONCENTRATION:Skill = new Skill(\"concentration\", \"Concentration\", Ability.CON);\n    public static CRAFT_1:Skill = new Skill(\"craft1\", \"Craft\", Ability.INT);\n    public static DECIPHER_SCRIPT:Skill = new Skill(\"decipherScript\", \"Decipher Script\", Ability.INT);\n    public static DIPLOMACY:Skill = new Skill(\"diplomacy\", \"Diplomacy\", Ability.CHA);\n    public static DISABLE_DEVICE:Skill = new Skill(\"disableDevice\", \"Disable Device\", Ability.INT);\n    public static DISGUISE:Skill = new Skill(\"disguise\", \"disguise\", Ability.CHA);\n    public static ESCAPE_ARTIST:Skill = new Skill(\"escapeArtist\", \"Escape Artist\", Ability.DEX);\n    public static FORGERY:Skill = new Skill(\"forgery\", \"Forgery\", Ability.INT);\n    public static GATHER_INFORMATION:Skill = new Skill(\"gatherInformation\", \"Gather Information\", Ability.DEX);\n    public static HANDLE_ANIMAL:Skill = new Skill(\"handleAnimal\", \"Handle Animal\", Ability.CHA);\n    public static HEAL:Skill = new Skill(\"heal\", \"Heal\", Ability.INT);\n\tpublic static HIDE:Skill = new Skill(\"hide\",\"Hide\", Ability.DEX);\n\tpublic static INNUENDO:Skill = new Skill(\"innuendo\",\"Innuendo\", Ability.WIS);\n\tpublic static INTIMIDATE:Skill = new Skill(\"intimidate\",\"Intimidate\", Ability.CHA);\n\tpublic static INTUIT_DIRECTION:Skill = new Skill(\"intuitDirection\",\"Intuit Direction\", Ability.WIS);\n\tpublic static JUMP:Skill = new Skill(\"jump\",\"Jump\", Ability.STR);\n\tpublic static KNOWLEDGE_ARC:Skill = new Skill(\"knowledgeArc\",\"Knowledge (Arcana)\", Ability.INT);\n\tpublic static KNOWLEDGE_NATURE:Skill = new Skill(\"knowledgeNature\",\"Knowledge (Nature)\", Ability.INT);\n\tpublic static KNOWLEDGE_RELIGION:Skill = new Skill(\"knowledgeReligion\",\"Knowledge (Religion)\", Ability.INT);\n\tpublic static KNOWLEDGE_PLANAR:Skill = new Skill(\"knowledgePlanar\",\"Knowledge (Planar)\", Ability.INT);\n\tpublic static KNOWLEDGE_HISTORY:Skill = new Skill(\"knowledgeHistory\",\"Knowledge (History)\", Ability.INT);\n\tpublic static KNOWLEDGE_3:Skill = new Skill(\"knowledge3\",\"Knowledge\", Ability.INT);\n\tpublic static KNOWLEDGE_4:Skill = new Skill(\"knowledge4\",\"Knowledge\", Ability.INT);\n\tpublic static KNOWLEDGE_5:Skill = new Skill(\"knowledge5\",\"Knowledge\", Ability.INT);\n\tpublic static LISTEN:Skill = new Skill(\"listen\",\"Listen\", Ability.WIS);\n\tpublic static MOVE_SILENTLY:Skill = new Skill(\"moveSilently\",\"Move Silently\", Ability.DEX);\n\tpublic static OPEN_LOCK:Skill = new Skill(\"openLock\",\"Open Lock\", Ability.DEX);\n\tpublic static PERFORM:Skill = new Skill(\"perform\",\"Perform\", Ability.CHA);\n\tpublic static PICK_POCKETS:Skill = new Skill(\"pickPockets\",\"Pick Pockets\", Ability.DEX);\n\tpublic static PROFESSION_1:Skill = new Skill(\"profession1\",\"Profession\", Ability.INT);\n\tpublic static PROFESSION_2:Skill = new Skill(\"profession2\",\"Profession\", Ability.INT);\n\tpublic static PROFESSION_3:Skill = new Skill(\"profession3\",\"Profession\", Ability.INT);\n\tpublic static READ_LIPS:Skill = new Skill(\"readLips\",\"Read Lips\", Ability.INT);\n\tpublic static RIDE:Skill = new Skill(\"ride\",\"Ride\", Ability.DEX);\n\tpublic static SCRY:Skill = new Skill(\"scry\",\"Scry\", Ability.INT);\n\tpublic static SEARCH:Skill = new Skill(\"search\",\"Search\", Ability.INT);\n\tpublic static SENSE_MOTIVE:Skill = new Skill(\"senseMotive\",\"Sense Motive\", Ability.WIS);\n\tpublic static SPEAK_LANGUAGE:Skill = new Skill(\"speakLanguage\",\"Speak Language\", Ability.INT);\n\tpublic static SPELLCRAFT:Skill = new Skill(\"spellcraft\",\"Spellcraft\", Ability.INT);\n\tpublic static SPOT:Skill = new Skill(\"spot\",\"Spot\", Ability.WIS);\n\tpublic static SWIM:Skill = new Skill(\"swim\",\"Swim\", Ability.STR);\n\tpublic static TUMBLE:Skill = new Skill(\"tumble\",\"Tumble\", Ability.DEX);\n\tpublic static USE_MAGIC_DEVICE:Skill = new Skill(\"useMagicDevice\",\"Use Magic Device\", Ability.CHA);\n\tpublic static USE_ROPE:Skill = new Skill(\"useRope\",\"Use Rope\", Ability.DEX);\n\tpublic static WILDERNESS_LORE:Skill = new Skill(\"wildernessLore\",\"Wilderness Lore\", Ability.WIS);\n\tpublic static PLACEHOLDER_1:Skill = new Skill(\"placeholder1\",\"\", Ability.INT);\n\tpublic static PLACEHOLDER_2:Skill = new Skill(\"placeholder2\",\"\", Ability.INT);\n\n    private name:string;\n    private label:string;\n    private ability:Ability;\n\n    constructor(name:string, label:string, ability:Ability) {\n        this.name = name;\n        this.label = label;\n        this.ability = ability;\n\t\tSkill.ALL.push(this);\n    };\n\n    public getName():string {\n        return this.name;\n    }\n\n    public getLabel():string {\n        return this.label;\n    };\n\n    public getAbility():Ability {\n        return this.ability;\n    };\n}\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./src/app/char/skills/skill.ts","module.exports = \"<div class=\\\"weapon\\\">\\n    <div class=\\\"row header\\\">\\n        <div class=\\\"col-xs-12\\\">\\n            <div class=\\\"row\\\">\\n                <div class=\\\"col-xs-6\\\">\\n                    <input class=\\\"form-control input-sm text-uppercase inverse\\\" value=\\\"Shield\\\"/>\\n                </div>\\n                <div class=\\\"col-xs-2\\\">\\n                    <label class=\\\"text-uppercase\\\">Type</label>\\n                </div>\\n                <div class=\\\"col-xs-2\\\">\\n                    <label class=\\\"text-uppercase\\\">Armor Bonus</label>\\n                </div>\\n                <div class=\\\"col-xs-2\\\">\\n                    <label class=\\\"text-uppercase\\\">Max Dex Bonus</label>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n    <div class=\\\"row\\\">\\n        <div class=\\\"col-xs-12\\\">\\n            <div class=\\\"row\\\">\\n                <div class=\\\"col-xs-6\\\">\\n                    <input class=\\\"form-control input-sm\\\" [(ngModel)]=\\\"charService.getChar().shield.name\\\"/>\\n                </div>\\n                <div class=\\\"col-xs-2\\\">\\n                    <input class=\\\"text-uppercase form-control input-sm\\\" value=\\\"\\\"/>\\n                </div>\\n                <div class=\\\"col-xs-2\\\">\\n                    <input class=\\\"text-uppercase form-control input-sm\\\" [(ngModel)]=\\\"charService.getChar().shield.bonus\\\"/>\\n                </div>\\n                <div class=\\\"col-xs-2\\\">\\n                    <input class=\\\"text-uppercase form-control input-sm\\\" value=\\\"\\\"/>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n    <div class=\\\"row\\\">\\n        <div class=\\\"col-xs-12\\\">\\n            <div class=\\\"row\\\">\\n                <div class=\\\"col-xs-2\\\">\\n                    <label class=\\\"text-uppercase\\\">Check Penalty</label>\\n                </div>\\n                <div class=\\\"col-xs-2\\\">\\n                    <label class=\\\"text-uppercase\\\">Spell Failure</label>\\n                </div>\\n                <div class=\\\"col-xs-2\\\">\\n                    <label class=\\\"text-uppercase\\\">Weight</label>\\n                </div>\\n                <div class=\\\"col-xs-6\\\">\\n                    <label class=\\\"text-uppercase\\\">Special Properties</label>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n    <div class=\\\"row\\\">\\n        <div class=\\\"col-xs-12\\\">\\n            <div class=\\\"row\\\">\\n                <div class=\\\"col-xs-2\\\">\\n                    <input class=\\\"text-uppercase form-control input-sm\\\" value=\\\"\\\"/>\\n                </div>\\n                <div class=\\\"col-xs-2\\\">\\n                    <input class=\\\"text-uppercase form-control input-sm\\\" value=\\\"\\\"/>\\n                </div>\\n                <div class=\\\"col-xs-2\\\">\\n                    <input class=\\\"text-uppercase form-control input-sm\\\" value=\\\"\\\"/>\\n                </div>\\n                <div class=\\\"col-xs-6\\\">\\n                    <input class=\\\"text-uppercase form-control input-sm\\\" value=\\\"\\\"/>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/char/shield/shield.component.html\n// module id = 80\n// module chunks = 0","module.exports = \"<div class=\\\"row\\\">\\n    <div class=\\\"col-xs-4 col-xs-offset-1\\\">\\n        <div class=\\\"row\\\">\\n            <div class=\\\"col-xs-2\\\"></div>\\n            <div class=\\\"col-xs-5 col-xs-offset-1\\\"><label class=\\\"text-uppercase\\\">Skills</label></div>\\n            <div class=\\\"col-xs-3\\\"><label class=\\\"text-uppercase\\\">Class</label></div>\\n        </div>\\n    </div>\\n    <div class=\\\"col-xs-7\\\">\\n        <div class=\\\"row\\\">\\n            <div class=\\\"col-xs-2\\\"><label class=\\\"text-uppercase\\\">Cross Class</label></div>\\n        </div>\\n    </div>\\n</div>\\n<div class=\\\"row\\\">\\n    <div class=\\\"col-xs-4 col-xs-offset-1\\\">\\n        <div class=\\\"row\\\">\\n            <div class=\\\"col-xs-2\\\"></div>\\n            <div class=\\\"col-xs-5 col-xs-offset-1\\\"><label class=\\\"text-uppercase\\\">Max Ranks</label></div>\\n            <div class=\\\"col-xs-3\\\"><input class=\\\"form-control input-sm\\\" value=\\\"{{maxClassSkillRank()}}\\\"/></div>\\n        </div>\\n    </div>\\n    <div class=\\\"col-xs-7\\\">\\n        <div class=\\\"row\\\">\\n            <div class=\\\"col-xs-2\\\"><input class=\\\"form-control input-sm\\\" value=\\\"{{maxCrossClassSkillRank()}}\\\"/></div>\\n            <div class=\\\"col-xs-2\\\"><label class=\\\"input-sm\\\" class=\\\"text-uppercase\\\">Total</label></div>\\n            <div class=\\\"col-xs-2\\\"><label class=\\\"text-uppercase\\\">Skill ranks</label></div>\\n            <div class=\\\"col-xs-2\\\"><label class=\\\"text-uppercase\\\">Ability Modifier</label></div>\\n            <div class=\\\"col-xs-2\\\"><label class=\\\"text-uppercase\\\">Misc Modifier</label></div>\\n        </div>\\n    </div>\\n</div>\\n<div class=\\\"row\\\" *ngFor=\\\"let skill of skills\\\">\\n    <div class=\\\"col-xs-4 col-xs-offset-1\\\">\\n        <div class=\\\"row\\\">\\n            <div class=\\\"col-xs-2\\\"><input type=\\\"checkbox\\\" [checked]=\\\"isClassSkill(skill)\\\" disabled></div>\\n            <div class=\\\"col-xs-10\\\" style=\\\"text-align: left\\\"><label class=\\\"input-sm\\\">{{skill.getLabel()}}</label></div>\\n        </div>\\n    </div>\\n    <div class=\\\"col-xs-7\\\">\\n        <div class=\\\"row\\\">\\n            <div class=\\\"col-xs-2 {{skill.getAbility().getName()}}\\\">\\n                <input type=\\\"text\\\" class=\\\"text-uppercase form-control input-sm\\\" value=\\\"{{skill.getAbility().getName()}}\\\"/>\\n            </div>\\n            <div class=\\\"col-xs-2\\\"><input type=\\\"text\\\" class=\\\"form-control input-sm\\\"\\n                                         value=\\\"{{ charService.getTotalSkillRank(skill) }}\\\"/></div>\\n            <div class=\\\"col-xs-2\\\"><input type=\\\"text\\\" class=\\\"form-control input-sm\\\"\\n                                         [(ngModel)]=\\\"charService.getChar().skills[skill.getName()]\\\"/></div>\\n            <div class=\\\"col-xs-2\\\"><input type=\\\"text\\\" class=\\\"form-control input-sm\\\"\\n                                         value=\\\"{{ charService.getAbilityModifier(skill.getAbility()) }}\\\"/></div>\\n            <div class=\\\"col-xs-2\\\"><input type=\\\"text\\\" class=\\\"form-control input-sm\\\"\\n                                         [(ngModel)]=\\\"charService.getChar().skills_misc[skill.getName()]\\\"/></div>\\n        </div>\\n    </div>\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/char/skills/skills.component.html\n// module id = 81\n// module chunks = 0","module.exports = \"<div *ngFor=\\\"let weapon of weapons\\\" class=\\\"weapon\\\">\\n    <div class=\\\"row header\\\">\\n        <div class=\\\"col-xs-12\\\">\\n            <div class=\\\"row\\\">\\n                <div class=\\\"col-xs-6\\\">\\n                    <input class=\\\"form-control input-sm text-uppercase inverse\\\" value=\\\"Weapon\\\"/>\\n                </div>\\n                <div class=\\\"col-xs-2\\\">\\n                    <label class=\\\"text-uppercase\\\">Attack Bonus</label>\\n                </div>\\n                <div class=\\\"col-xs-2\\\">\\n                    <label class=\\\"text-uppercase\\\">Damage</label>\\n                </div>\\n                <div class=\\\"col-xs-2\\\">\\n                    <label class=\\\"text-uppercase\\\">Critical</label>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n    <div class=\\\"row\\\">\\n        <div class=\\\"col-xs-12\\\">\\n            <div class=\\\"row\\\">\\n                <div class=\\\"col-xs-6\\\">\\n                    <input class=\\\"text-uppercase form-control input-sm\\\" value=\\\"\\\"/>\\n                </div>\\n                <div class=\\\"col-xs-2\\\">\\n                    <input class=\\\"text-uppercase form-control input-sm\\\" value=\\\"\\\"/>\\n                </div>\\n                <div class=\\\"col-xs-2\\\">\\n                    <input class=\\\"text-uppercase form-control input-sm\\\" value=\\\"\\\"/>\\n                </div>\\n                <div class=\\\"col-xs-2\\\">\\n                    <input class=\\\"text-uppercase form-control input-sm\\\" value=\\\"\\\"/>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n    <div class=\\\"row\\\">\\n        <div class=\\\"col-xs-12\\\">\\n            <div class=\\\"row\\\">\\n                <div class=\\\"col-xs-2\\\">\\n                    <label class=\\\"text-uppercase\\\">Range</label>\\n                </div>\\n                <div class=\\\"col-xs-2\\\">\\n                    <label class=\\\"text-uppercase\\\">Weight</label>\\n                </div>\\n                <div class=\\\"col-xs-2\\\">\\n                    <label class=\\\"text-uppercase\\\">Type</label>\\n                </div>\\n                <div class=\\\"col-xs-2\\\">\\n                    <label class=\\\"text-uppercase\\\">Size</label>\\n                </div>\\n                <div class=\\\"col-xs-4\\\">\\n                    <label class=\\\"text-uppercase\\\">Special Properties</label>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n    <div class=\\\"row\\\">\\n        <div class=\\\"col-xs-12\\\">\\n            <div class=\\\"row\\\">\\n                <div class=\\\"col-xs-2\\\">\\n                    <input class=\\\"text-uppercase form-control input-sm\\\" value=\\\"\\\"/>\\n                </div>\\n                <div class=\\\"col-xs-2\\\">\\n                    <input class=\\\"text-uppercase form-control input-sm\\\" value=\\\"\\\"/>\\n                </div>\\n                <div class=\\\"col-xs-2\\\">\\n                    <input class=\\\"text-uppercase form-control input-sm\\\" value=\\\"\\\"/>\\n                </div>\\n                <div class=\\\"col-xs-2\\\">\\n                    <input class=\\\"text-uppercase form-control input-sm\\\" value=\\\"\\\"/>\\n                </div>\\n                <div class=\\\"col-xs-4\\\">\\n                    <input class=\\\"text-uppercase form-control input-sm\\\" value=\\\"\\\"/>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/char/weapons/weapons.component.html\n// module id = 82\n// module chunks = 0","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!./../../node_modules/css-loader/index.js!./../../node_modules/sass-loader/index.js!./styles.scss\");\nif(typeof content === 'string') content = [[module.id, content, '']];\n// add the styles to the DOM\nvar update = require(\"!./../../node_modules/style-loader/addStyles.js\")(content, {});\nif(content.locals) module.exports = content.locals;\n// Hot Module Replacement\nif(module.hot) {\n\t// When the styles change, update the <style> tags\n\tif(!content.locals) {\n\t\tmodule.hot.accept(\"!!./../../node_modules/css-loader/index.js!./../../node_modules/sass-loader/index.js!./styles.scss\", function() {\n\t\t\tvar newContent = require(\"!!./../../node_modules/css-loader/index.js!./../../node_modules/sass-loader/index.js!./styles.scss\");\n\t\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\t\t\tupdate(newContent);\n\t\t});\n\t}\n\t// When the module is disposed, remove the <style> tags\n\tmodule.hot.dispose(function() { update(); });\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/styles/styles.scss\n// module id = 83\n// module chunks = 0","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!./../../node_modules/css-loader/index.js!./headings.css\");\nif(typeof content === 'string') content = [[module.id, content, '']];\n// add the styles to the DOM\nvar update = require(\"!./../../node_modules/style-loader/addStyles.js\")(content, {});\nif(content.locals) module.exports = content.locals;\n// Hot Module Replacement\nif(module.hot) {\n\t// When the styles change, update the <style> tags\n\tif(!content.locals) {\n\t\tmodule.hot.accept(\"!!./../../node_modules/css-loader/index.js!./headings.css\", function() {\n\t\t\tvar newContent = require(\"!!./../../node_modules/css-loader/index.js!./headings.css\");\n\t\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\t\t\tupdate(newContent);\n\t\t});\n\t}\n\t// When the module is disposed, remove the <style> tags\n\tmodule.hot.dispose(function() { update(); });\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/styles/headings.css\n// module id = 84\n// module chunks = 0","\n        var result = require(\"!!./../../node_modules/css-loader/index.js!./app.component.css\");\n\n        if (typeof result === \"string\") {\n            module.exports = result;\n        } else {\n            module.exports = result.toString();\n        }\n    \n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/app.component.css\n// module id = 85\n// module chunks = 0","module.exports = (__webpack_require__(4))(0);\n\n\n//////////////////\n// WEBPACK FOOTER\n// delegated ./node_modules/rxjs/Observable.js from dll-reference vendor_lib\n// module id = 86\n// module chunks = 0","import {Skill} from \"../char/skills/skill\";\nimport {ClassesFormulas} from \"./classesFormulas\";\nimport {Ability} from \"../char/abilities/abitly\";\n\n/**\n * Created by sargon on 7/16/16.\n */\nexport class Classes {\n    public static ALL:Classes[] = [];\n\n    public static NONE:Classes = new Classes(\"\", ClassesFormulas.none,\n      ClassesFormulas.none, ClassesFormulas.none, ClassesFormulas.none);\n\n    public static CLERIC:Classes = new Classes(\"cleric\", ClassesFormulas.getMediumBAB,\n        ClassesFormulas.getHighSave, ClassesFormulas.getLowSave, ClassesFormulas.getHighSave,\n        [Skill.CONCENTRATION, Skill.CRAFT_1, Skill.DIPLOMACY, Skill.HEAL, Skill.KNOWLEDGE_ARC, Skill.KNOWLEDGE_HISTORY,\n        Skill.KNOWLEDGE_RELIGION, Skill.KNOWLEDGE_PLANAR, Skill.PROFESSION_1, Skill.SPELLCRAFT]);\n\n    public static MONK:Classes = new Classes(\"monk\", ClassesFormulas.getHighBAB,\n        ClassesFormulas.getHighSave, ClassesFormulas.getLowSave, ClassesFormulas.getHighSave,\n        [Skill.BALANCE]);\n\n    private _name:string;\n    private _baseAttackBonusFunction: any;\n    private _fortitudeSaveFunction: any;\n    private _reflexSaveFunction: any;\n    private _willSaveFunction: any;\n    private _skills: Skill[];\n\n    constructor(name:string, baseAttackBonusFunction: any, fortitudeSaveFunction: any, reflexSaveFunction: any,\n                willSaveFunction: any, skills?:[Skill]) {\n        this._name = name;\n        this._baseAttackBonusFunction = baseAttackBonusFunction;\n        this._fortitudeSaveFunction = fortitudeSaveFunction;\n        this._reflexSaveFunction = reflexSaveFunction;\n        this._willSaveFunction = willSaveFunction;\n        this._skills = skills || [];\n        Classes.ALL.push(this);\n    }\n\n    public static getClass(name:string):Classes {\n        return Classes.ALL.find((charClass: Classes) => {\n            return charClass.getName() === name;\n        });\n    }\n\n    public getName():string {\n        return this._name;\n    }\n\n    public getSkills(): Skill[] {\n        return this._skills;\n    }\n\n    public getBAB(level):number {\n        return this._baseAttackBonusFunction.call(this, level);\n    }\n\n    public getFortitudeSave(level):number {\n        return this._fortitudeSaveFunction.call(this, level);\n    }\n\n    public getReflexSave(level):number {\n        return this._reflexSaveFunction.call(this, level);\n    }\n\n    public getWillSave(level):number {\n        return this._willSaveFunction.call(this, level);\n    }\n\n    public getSave(ability:Ability, level:number) {\n        switch (ability) {\n            case Ability.CON: return this.getFortitudeSave(level);\n            case Ability.DEX: return this.getReflexSave(level);\n            case Ability.WIS: return this.getWillSave(level);\n        }\n    }\n}\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./src/app/classes/classes.ts","module.exports = (__webpack_require__(4))(440);\n\n\n//////////////////\n// WEBPACK FOOTER\n// delegated ./node_modules/@angular/forms/index.js from dll-reference vendor_lib\n// module id = 91\n// module chunks = 0","module.exports = (__webpack_require__(4))(441);\n\n\n//////////////////\n// WEBPACK FOOTER\n// delegated ./node_modules/@angular/http/index.js from dll-reference vendor_lib\n// module id = 92\n// module chunks = 0","module.exports = (__webpack_require__(4))(443);\n\n\n//////////////////\n// WEBPACK FOOTER\n// delegated ./node_modules/@angular/router/index.js from dll-reference vendor_lib\n// module id = 93\n// module chunks = 0"],"mappings":";;;;;;AAAA;;;;;;;;ACAA;AACA;AAIA;AAIA;AACA;AAIA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAEA;AAKA;AAAA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAKA;AAEA;AAEA;;;;;;;;;;;;ACxDA;;;;;;;;ACAA;AAOA;AADA;AAGA;AA0BA;AAvBA;AADA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAJA;AAMA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAAA;AA5BA;AADA;AACA;AAAA;;;;;;;;;;;ACPA;AAEA;AAAA;AAMA;AAJA;AACA;AACA;AACA;AACA;AAAA;AANA;AADA;AACA;AAAA;;;;;;;;;;;ACFA;AACA;AACA;AAQA;AAEA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAAA;AA1BA;AANA;AACA;AACA;AACA;AAKA;AAFA;AAAA;;;;;;;;;;;;ACVA;;;;;;;ACAA;;;;;;;;ACAA;;AAEA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACxBA;AACA;AACA;AACA;;;;;;;;;ACHA;AAEA;AAEA;AACA;AACA;AAGA;AADA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AA8EA;AA5EA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AAAA;AACA;AAAA;AA3IA;AADA;AACA;AAAA;;;;;;;;;;;;;;ACTA;;;;;;;ACAA;;;;;;;;ACAA;;AAEA;AACA;AAKA;AAEA;;;AAGA;AAaA;AAKA;AACA;AALA;AACA;AACA;AAIA;AAEA;AACA;AACA;AAEA;AAAA;AAbA;AAZA;AACA;AACA;AACA;AACA;AACA;AACA;AAKA;AAOA;AANA;AAAA;AAeA;;;;;;AAMA;;;;;;;;;;;;AC/CA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AAQA;;AAEA;AA8BA;AAEA;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AAAA;AA3CA;AA7BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AAHA;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC3EA;AAaA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAAA;AACA;AAAA;;AAtBA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;ACRA;AACA;AACA;AAGA;AAAA;AAIA;AAHA;AACA;AACA;AACA;AAAA;AAJA;AADA;AACA;AAAA;AAMA;AACA;AACA;AACA;;;;;;;;;;;;;;;;ACZA;AAEA;AACA;AACA;AACA;;;;;;;;;;;ACRA;AACA;AACA;AAQA;AAGA;AAAA;AAFA;AAGA;AAAA;AACA;AAAA;AALA;AALA;AACA;AACA;AACA;AAKA;AAHA;AAAA;;;;;;;;;;;;;ACVA;AACA;AACA;AACA;AAOA;AAGA;AAAA;AAFA;AAGA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AArDA;AALA;AACA;AACA;AACA;AAKA;AAHA;AAAA;AAsDA;;;;;;;;;;;;;;AChEA;AACA;AAOA;AAEA;AAAA;AAAA;AACA;AAAA;AAHA;AALA;AACA;AACA;AACA;AAIA;AAFA;AAAA;AAGA;;;;;;;;;;;;ACXA;AAEA;AAQA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AAAA;;AArBA;AACA;AACA;;;;;;;;;;;ACLA;AACA;AAOA;AALA;AAMA;AACA;AAAA;AAAA;AAFA;AALA;AACA;AACA;AACA;AAEA;AAAA;AAEA;;;;;;;;;;;;ACTA;;AAEA;AACA;AAAA;AASA;AARA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAAA;;;;;;;;;;;ACbA;AACA;AACA;AACA;AAOA;AAMA;AAAA;AAJA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AAfA;AALA;AACA;AACA;AACA;AAQA;AANA;AAAA;AAeA;;;;;;;;;;;;;;ACzBA;AACA;AACA;AAOA;AAGA;AAAA;AAFA;AAGA;AAAA;AAEA;AACA;AACA;AACA;AACA;AAAA;AAVA;AALA;AACA;AACA;AACA;AAKA;AAHA;AAAA;AAUA;;;;;;;;;;;;;ACnBA;AAEA;AAWA;AACA;AACA;AACA;AAEA;AACA;AAAA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AAAA;;AA5BA;AACA;AACA;AACA;;;;;;;;;;;ACPA;AACA;AACA;AAOA;AAGA;AAAA;AAFA;AAGA;AAAA;AACA;AAAA;AALA;AALA;AACA;AACA;AACA;AAKA;AAHA;AAAA;AAKA;;;;;;;;;;;;;ACdA;AACA;AAOA;AAEA;AAAA;AACA;AAAA;AACA;AAAA;AAJA;AALA;AACA;AACA;AACA;AAIA;AAFA;AAAA;AAIA;;;;;;;;;;;;ACZA;AACA;AAEA;AAOA;AAGA;AAAA;AAFA;AAEA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AAAA;AAhBA;AALA;AACA;AACA;AACA;AAKA;AAHA;AAAA;AAgBA;;;;;;;;;;;;;AC1BA;AAAA;AAEA;AAAA;AAAA;;;;;;;;;;;ACFA;AACA;AAOA;AALA;AAMA;AACA;AAAA;AAAA;AAFA;AALA;AACA;AACA;AACA;AAEA;AAAA;AAEA;;;;;;;;;;;;ACVA;;AAEA;AACA;AAAA;AAqCA;AAnCA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;;;;;;;;;;;ACxCA;;AAEA;AACA;AAKA;AACA;AACA;AACA;AAEA;AACA;AACA;AAAA;AAEA;AACA;AACA;AAAA;AACA;AAAA;;;;;;;;;;;ACpBA;;AAEA;AACA;AAqBA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AAAA;;AAhEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACPA;;;;;;;ACAA;;;;;;;ACAA;;;;;;;ACAA;;;;;;;ACAA;;;;;;;ACAA;;;;;;;ACAA;;;;;;;ACAA;;;;;;;;ACAA;AAEA;AA6DA;AACA;AACA;AACA;AACA;AACA;AAAA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAAA;AAEA;AACA;AACA;AAAA;AACA;AAAA;;AA9EA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;ACzDA;;;;;;;ACAA;;;;;;;ACAA;;;;;;;ACAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;ACpBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;ACpBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;ACRA;;;;;;;;ACAA;AACA;AACA;AAEA;;AAEA;AACA;AAsBA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;;AArEA;AAEA;AAGA;AAGA;AAEA;;;;;;;;;;;;AClBA;;;;;;;ACAA;;;;;;;ACAA;;;;","sourceRoot":""}